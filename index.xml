<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guangchuang Yu</title>
    <link>http://guangchuangyu.github.io/cn/</link>
    <description>Recent content on Guangchuang Yu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Mar 2016 15:40:22 +0800</lastBuildDate>
    <atom:link href="http://guangchuangyu.github.io/cn/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Google Drive @ HKU</title>
      <link>http://guangchuangyu.github.io/cn/2016/03/google-drive--hku/</link>
      <pubDate>Thu, 24 Mar 2016 15:40:22 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2016/03/google-drive--hku/</guid>
      <description>

&lt;p&gt;寻找一个好的网盘一直是个困扰我的问题，Dropbox非常好，但空间有限，大陆的各种网盘都是渣渣，本来试用了一下&lt;a href=&#34;http://guangchuangyu.github.io/2014/05/%E6%9B%B4%E6%94%B9%E7%99%BE%E5%BA%A6%E4%BA%91%E5%90%8C%E6%AD%A5%E7%9B%98%E8%B7%AF%E5%BE%84/&#34;&gt;百度云&lt;/a&gt;，但度娘实在不争气，体验非常差。我后来找到了个比较好的方案，那就是&lt;a href=&#34;https://gitlab.com/&#34;&gt;gitlab&lt;/a&gt;，可以创建无限量的project，每个project有10G的空间，这比&lt;a href=&#34;https://github.com/&#34;&gt;github&lt;/a&gt;出手大方多了。唯一不足是&lt;code&gt;.git&lt;/code&gt;文件夹也是非常占空间的。&lt;/p&gt;

&lt;p&gt;到HKU两年多，才发现HKU的邮箱自带无限量的google drive网盘。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2016/google_drive.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;三大问题全部解决。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;dropbox空间不够&lt;/li&gt;
&lt;li&gt;国内云盘不好用&lt;/li&gt;
&lt;li&gt;git占空间&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;介绍给实验室的小伙伴之后，看到&lt;code&gt;unlimited&lt;/code&gt;都好兴奋，但同时又担心毕业后的问题。看来普遍不清楚HKU的邮箱政策。所以写下这个post，一来让更多的人知道这么重大利好的网盘，另一方面也回答以下几个FAQ（看来像我这种来的时候就去读FAQ的人不多 -,-）。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;faq1-毕业了邮箱还能用不:f7ce54e33cd721c19b1e5d4fc4d3d4fd&#34;&gt;FAQ1: 毕业了邮箱还能用不？&lt;/h2&gt;

&lt;p&gt;实验室师姐临毕业时经常收不到学校催她提交各种材料的信件，原因不是邮箱不能用了，而是&lt;code&gt;@hku.hk&lt;/code&gt;不能用了。我在刚来的时候就看了相关的细则，知道HKU的邮箱是终身可用的，才开始使用的，而且我知道&lt;code&gt;@hku.hk&lt;/code&gt;毕业后不能用，我给学校的材料一直都只会填写&lt;code&gt;@connect.hku.hk&lt;/code&gt;，以防毕业期间丢邮件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2016/Screenshot 2016-03-24 15.33.41.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;faq2-毕业了服务还在么:f7ce54e33cd721c19b1e5d4fc4d3d4fd&#34;&gt;FAQ2: 毕业了服务还在么？&lt;/h2&gt;

&lt;p&gt;HKU的邮箱终身免费使用google drive无限量空间。
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2016/Screenshot 2016-03-24 15.34.38.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;faq3-回大陆怎么用:f7ce54e33cd721c19b1e5d4fc4d3d4fd&#34;&gt;FAQ3: 回大陆怎么用？&lt;/h2&gt;

&lt;p&gt;上google简直太容易，Windows/MacOSX/Linux用户都可以使用&lt;a href=&#34;https://github.com/XX-net/XX-Net&#34;&gt;XX-Net&lt;/a&gt;，自动切换代理，不需要代理的网站并不使用代理，所以不像vpn一样，速度慢，体验差。如果是windows用户又觉得设置太繁琐，可以使用集成了XX-Net的&lt;a href=&#34;http://www.ccav1.me/chromegae.html&#34;&gt;ChromeGAE&lt;/a&gt;，一键安装，开箱即用，且支持自动更新。&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;550&#34; seamless=&#34;seamless&#34; frameborder=&#34;0&#34; scrolling=&#34;yes&#34; src=&#34;http://www.weibo.com/2185528715/DtVV33ciy?from=page_1005052185528715_profile&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>使用ggtree实现进化树的可视化和注释</title>
      <link>http://guangchuangyu.github.io/cn/2016/03/%E4%BD%BF%E7%94%A8ggtree%E5%AE%9E%E7%8E%B0%E8%BF%9B%E5%8C%96%E6%A0%91%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96%E5%92%8C%E6%B3%A8%E9%87%8A/</link>
      <pubDate>Wed, 09 Mar 2016 13:17:48 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2016/03/%E4%BD%BF%E7%94%A8ggtree%E5%AE%9E%E7%8E%B0%E8%BF%9B%E5%8C%96%E6%A0%91%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96%E5%92%8C%E6%B3%A8%E9%87%8A/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;本文受魏太云（&lt;a href=&#34;http://www.weibo.com/taiyun&#34;&gt;@cloud_wei&lt;/a&gt;)的邀请，最初发表于&lt;a href=&#34;http://cos.name/2015/11/to-achieve-the-visualization-and-annotation-of-evolutionary-tree-using-ggtree/&#34;&gt;统计之都&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;文章最后提到的可以在图上嵌入小图，比如饼图，柱状图等，&lt;a href=&#34;http://guangchuangyu.github.io/2016/01/annotate-a-phylogenetic-tree-with-insets/&#34;&gt;已经实现&lt;/a&gt;, 也可以使用用户自己图片来嵌入注释。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;进化树看起来和层次聚类很像。有必要解释一下两者的一些区别。&lt;/p&gt;

&lt;p&gt;层次聚类的侧重点在于分类，把距离近的聚在一起。而进化树的构建可以说也是一个聚类过程，但侧重点在于推测进化关系和进化距离(evolutionary
distance)。&lt;/p&gt;

&lt;p&gt;层次聚类的输入是距离，比如euclidean或manhattan距离。把距离近的聚在一起。而进化树推断是从生物序列（DNA或氨基酸）的比对开始。最简单的方法是计算一下序列中不匹配的数目，称之为hamming
distance（通常用序列长度做归一化），使用距离当然也可以应用层次聚类的方法。进化树的构建最简单的方法是非加权配对平均法（Unweighted
Pair Group Method with Arithmetic Mean, UPGMA），这其实是使用average
linkage的层次聚类。这种方法在进化树推断上现在基本没人用。更为常用的是邻接法（neighbor
joining），两个节点距离其它节点都比较远，而这两个节点又比较近，它们就是neighbor，可以看出neighbor不一定是距离最近的两个节点。真正做进化的人，这个方法也基本不用。现在主流的方法是最大似然法(Maximum
likelihood, ML)，通过进化模型（evolutionary
model)估计拓朴结构和分支长度，估计的结果具有最高的概率能够产生观测数据（多序列比对）。另外还有最大简约法和贝叶斯推断等方法用于构建进化树。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://evolution.genetics.washington.edu/phylip/newicktree.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://evolution.genetics.washington.edu/phylip/newicktree.html&#34;&gt;Newick&lt;/a&gt;是最常用的存储进化树的文件格式，如上面这个树，拓朴结构用newick格式可以表示为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(B,(A,C,E),D);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;括号最外层是根节点，它有三个子节点，&lt;code&gt;B&lt;/code&gt;,
&lt;code&gt;(A,C,E)&lt;/code&gt;和&lt;code&gt;D&lt;/code&gt;，而节点&lt;code&gt;(A,C,E)&lt;/code&gt;也有三个子节点&lt;code&gt;A&lt;/code&gt;，&lt;code&gt;C&lt;/code&gt;和&lt;code&gt;E&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;加上分支长度，使用&lt;code&gt;:&lt;/code&gt;来分隔：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(B:6.0,(A:5.0,C:3.0,E:4.0):5.0,D:11.0);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;比如&lt;code&gt;A:5.0&lt;/code&gt;代表的是&lt;code&gt;A&lt;/code&gt;与其父节点的距离是&lt;code&gt;5.0&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;内部节点也可以有label，写在相应的括号外面，如下所示：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;(B:6.0,(A:5.0,C:3.0,E:4.0)Ancestor1:5.0,D:11.0);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这是最为广泛支持的文件格式，很多进化树可视软件只支持newick格式。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt;的开发源自于我需要在树上做注释，发现并没有软件可以很容易地实现，通常情况下我们把统计信息加到节点的label上来展示，比如CodeML的dN/dS分析，输出文件里就给用户准备了newick树文本，把dN/dS
( &lt;em&gt;ω&lt;/em&gt; ) 加于节点label之上:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;codeml_file &amp;lt;- system.file(&amp;quot;extdata/PAML_Codeml/mlc&amp;quot;, package=&amp;quot;ggtree&amp;quot;)
tree_text &amp;lt;- readLines(codeml_file)[375:376]
tree_text

## [1] &amp;quot;w ratios as labels for TreeView:&amp;quot;                                                                                                                                                                                                                                                                                         
## [2] &amp;quot;(K #0.0224 , N #0.0095 , (D #0.0385 , (L #0.0001 , (J #0.0457 , (G #0.1621 , ((C #0.0461 , (E #0.0641 , O #0.0538 ) #0.0001 ) #0.0395 , (H #0.1028 , (I #0.0001 , (B #0.0001 , (A #0.0646 , (F #0.2980 , M #0.0738 ) #0.0453 ) #0.0863 ) #1.5591 ) #0.0001 ) #0.0001 ) #0.0549 ) #0.0419 ) #0.0001 ) #0.0964 ) #0.0129 );&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这种做法只能展示一元信息，而且修改节点label真心是个脏活，满满的都是不爽，我心中理想的方式是树与注释信息分开，注释信息可以方便地通过图层加上去，而且可以自由组合。于是着手开发&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt;。&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt;是个简单易用的R包，一行代码&lt;code&gt;ggtree(read.tree(file))&lt;/code&gt;即可实现树的可视化。而注释通过图层来实现，多个图层可以完成复杂的注释，这得力于&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt;的设计。其中最重要的一点是如何来解析进化树。&lt;/p&gt;

&lt;h2 id=&#34;ggtree的设计:d1d9992be5d6848a0489ec268963cadb&#34;&gt;ggtree的设计&lt;/h2&gt;

&lt;h3 id=&#34;进化树的解析:d1d9992be5d6848a0489ec268963cadb&#34;&gt;进化树的解析&lt;/h3&gt;

&lt;p&gt;除了&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt;之外，我所了解到的其它画树软件在画树的时候都把树当成是线条的集合。很明显画出来的进化树就是在画一堆线条，但是线条表示的是父节点和子节点的关系，除此之外没有任何意义，而节点在进化树上代表物种，叶子节点是我们构建进化树的物种，内部节点是根据叶子节点推断的共同祖先。我们所有的进化分析、推断、实验都是针对节点，节点才是进化树上有意义的实体。这是&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt;设计的基础，&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt;只映射节点到坐标系统中，而线条在&lt;code&gt;geom_tree&lt;/code&gt;图层中计算并画出来。这是与其它软件最根本的不同，也是ggtree能够简单地用图层加注释信息的基础。&lt;/p&gt;

&lt;h3 id=&#34;扩展ggplot2:d1d9992be5d6848a0489ec268963cadb&#34;&gt;扩展ggplot2&lt;/h3&gt;

&lt;p&gt;有很多可视化包基于ggplot2实现，包括各种&lt;code&gt;gg&lt;/code&gt;打头的，号称扩展了ggplot2，支持图形语法(grammar
of
graphics)，我并不认同。虽然基于&lt;code&gt;ggplot2&lt;/code&gt;产生的图，我们可以用&lt;code&gt;theme&lt;/code&gt;来进一步调整细节，用&lt;code&gt;scale_&lt;/code&gt;系列函数来调整颜色和标尺的映射，但这些不足以称之为&amp;rsquo;支持图形语法&amp;rsquo;，图形语法最关键核心的部分我认为是图层和映射。&lt;/p&gt;

&lt;p&gt;像&lt;code&gt;ggphylo&lt;/code&gt;,
&lt;code&gt;OutbreakTools&lt;/code&gt;和&lt;code&gt;phyloseq&lt;/code&gt;这几个包都有基于ggplot2的画树函数，但其实都不支持图形语法，它们所实现的是复杂的函数，画完就完事了，用户并不能使用图层来添加相关的信息。&lt;/p&gt;

&lt;p&gt;如果在&lt;code&gt;OutbreakTools&lt;/code&gt;这个包中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if (show.tip.label) {
    p &amp;lt;- p + geom_text(data = df.tip, aes(x = x, y = y, label = label),
                       hjust = 0, size = tip.label.size)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果&lt;code&gt;show.tip.label=FALSE&lt;/code&gt;，当函数返回&lt;code&gt;p&lt;/code&gt;时&lt;code&gt;df.tip&lt;/code&gt;就被扔掉，用户想要再加&lt;code&gt;tip.label&lt;/code&gt;就不可能了。&lt;code&gt;ggphylo&lt;/code&gt;和&lt;code&gt;phyloseq&lt;/code&gt;都是类似的实现，这些包把树解析为线条，所以节点相关的信息需要额外的&lt;code&gt;data.frame&lt;/code&gt;来存储，并且只有极少数的预设参数，比如上面例子中的&lt;code&gt;tip.label&lt;/code&gt;。在上面的例子中，用户连更改&lt;code&gt;tip.label&lt;/code&gt;的颜色都不可能，更别说使用额外的注释信息了。&lt;/p&gt;

&lt;p&gt;这几个包所实现的画图函数，都可以很容易地用&lt;code&gt;ggtree&lt;/code&gt;实现，并用经过测试，ggtree运行速度比这几个包都要快。更多信息请参考&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree/wiki/Why-ggtree-is-special%3F&#34;&gt;ggtree的wiki页面&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ggtree&lt;/code&gt;是真正扩展&lt;code&gt;ggplot2&lt;/code&gt;，支持图形语法的包。我们首先扩展ggplot支持tree
object做为输入，并实现&lt;code&gt;geom_tree&lt;/code&gt;图层来画线条。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(ggplot2)
library(ggtree)
set.seed(2015-11-26)
tree &amp;lt;- rtree(30)
ggplot(tree, aes(x, y)) + geom_tree()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-2-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;p&gt;ggtree函数是&lt;code&gt;ggplot() + geom_tree() + xlab(NA) + ylab(NA) + theme_tree()&lt;/code&gt;的简单组合。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggtree(tree)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-3-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;p&gt;想要加&lt;code&gt;tip.label&lt;/code&gt;，用&lt;code&gt;geom_tiplab&lt;/code&gt;图层，并且ggplot2的图层都可以直接应用于&lt;code&gt;ggtree&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggtree(tree) + geom_tiplab() + geom_point(color=&#39;firebrick&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-4-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;h2 id=&#34;树的操作与注释:d1d9992be5d6848a0489ec268963cadb&#34;&gt;树的操作与注释&lt;/h2&gt;

&lt;p&gt;ggtree提供了多个函数可以把clade放大缩小(scaleClade)，折叠(collapse)和展开(expand)，位置调换和旋转，以及分类(groupOTU,
groupClade)。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nwk &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;sample.nwk&amp;quot;, package=&amp;quot;ggtree&amp;quot;)
tree &amp;lt;- read.tree(nwk)
p &amp;lt;- ggtree(tree)
cp &amp;lt;- ggtree(tree) %&amp;gt;% collapse(node=21) + ggtitle(&#39;collapse&#39;)
ep &amp;lt;- cp %&amp;gt;% expand(node=21) + ggtitle(&#39;expand&#39;)
hp &amp;lt;- p + geom_hilight(node=21) + ggtitle(&#39;hilight&#39;)
rp &amp;lt;- hp %&amp;gt;% rotate(node=21) + ggtitle(&#39;rotate&#39;)
library(gridExtra)
grid.arrange(cp, ep, hp, rp, ncol=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-5-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;h2 id=&#34;支持多种文件格式:d1d9992be5d6848a0489ec268963cadb&#34;&gt;支持多种文件格式&lt;/h2&gt;

&lt;p&gt;ggtree支持的文件格式包括Newick, Nexus, NHX和jplace。&lt;/p&gt;

&lt;p&gt;上面已经展示了Newick格式，下面的例子是NHX格式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nhxfile = system.file(&amp;quot;extdata&amp;quot;, &amp;quot;ADH.nhx&amp;quot;, package=&amp;quot;ggtree&amp;quot;)
nhx &amp;lt;- read.nhx(nhxfile)
ggtree(nhx, ladderize=F) + geom_tiplab() + geom_point(aes(color=S), size=8, alpha=.3) + 
    theme(legend.position=&amp;quot;right&amp;quot;) + 
        geom_text(aes(label=branch.length, x=branch), vjust=-.5) + 
           xlim(NA, 0.3)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-6-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;h2 id=&#34;支持解析多种软件的输出文件:d1d9992be5d6848a0489ec268963cadb&#34;&gt;支持解析多种软件的输出文件&lt;/h2&gt;

&lt;p&gt;我们知道FigTree是针对&lt;a href=&#34;http://guangchuangyu.github.io/2015/04/an-example-of-drawing-beast-tree-using-ggtree/&#34;&gt;BEAST&lt;/a&gt;的输出设计的，可以把BEAST的统计推断拿来给树做注释，但很多的进化分析软件并没有相应的画树软件支持，用户很难把信息展示出来。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ggtree&lt;/code&gt;支持&lt;code&gt;ape&lt;/code&gt;, &lt;code&gt;phangorn&lt;/code&gt;, &lt;code&gt;r8s&lt;/code&gt;, &lt;code&gt;RAxML&lt;/code&gt;, &lt;code&gt;PAML&lt;/code&gt;, &lt;code&gt;HYPHY&lt;/code&gt;, &lt;code&gt;EPA&lt;/code&gt;,
&lt;code&gt;pplacer&lt;/code&gt;和&lt;code&gt;BEAST&lt;/code&gt;的输出。相应的统计分析结果可以应用于树的注释。可以说&lt;code&gt;ggtree&lt;/code&gt;把这些软件分析的结果带给了R用户，通过ggtree的解析，
这些进化分析结果可以进一点在R里进行处理和统计分析，并不单单是在ggtree中展示而已。&lt;/p&gt;

&lt;h3 id=&#34;raxml-bootstrap分析:d1d9992be5d6848a0489ec268963cadb&#34;&gt;RAxML bootstrap分析&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;raxml_file &amp;lt;- system.file(&amp;quot;extdata/RAxML&amp;quot;, &amp;quot;RAxML_bipartitionsBranchLabels.H3&amp;quot;, package=&amp;quot;ggtree&amp;quot;)
raxml &amp;lt;- read.raxml(raxml_file)
ggtree(raxml) + geom_text(aes(label=bootstrap, color=bootstrap)) + 
    scale_color_gradient(high=&#39;red&#39;, low=&#39;darkgreen&#39;) + 
       theme(legend.position=&#39;right&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-7-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;multiPhylo&lt;/code&gt;也是支持的，所以100颗bootstrap树可以同时用一行代码展示出来。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;btree_file &amp;lt;- system.file(&amp;quot;extdata/RAxML&amp;quot;, &amp;quot;RAxML_bootstrap.H3&amp;quot;, package=&amp;quot;ggtree&amp;quot;)
btree = read.tree(btree_file)
ggtree(btree) + facet_wrap(~.id, ncol=10)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-8-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;p&gt;如果不分面，这100颗树会重叠画在一起，这也能很好地展示bootstrap分析的结果，bootstrap值低的clade，线条会比较乱，而bootstrap值高的地方，线条一致性比较好。&lt;/p&gt;

&lt;h3 id=&#34;paml:d1d9992be5d6848a0489ec268963cadb&#34;&gt;PAML&lt;/h3&gt;

&lt;p&gt;使用BaseML预测的祖先序列，ggtree解析结果的同时会把父节点到子节点的subsitution给统计出来，可以直接在树上注释：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rstfile &amp;lt;- system.file(&amp;quot;extdata/PAML_Baseml&amp;quot;, &amp;quot;rst&amp;quot;, package=&amp;quot;ggtree&amp;quot;)
rst &amp;lt;- read.paml_rst(rstfile)
p &amp;lt;- ggtree(rst) + geom_text(aes(label=marginal_AA_subs, x=branch), vjust=-.5)
print(p)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-9-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;p&gt;不同于BaseML以碱基为单位，CodeML预测祖先序列，以密码子为单位。&lt;code&gt;ggtree&lt;/code&gt;定义了一个操作符&lt;a href=&#34;http://guangchuangyu.github.io/2015/02/ggtree-updating-a-tree-view-using--operator/&#34;&gt;%&amp;lt;%&lt;/a&gt;，如果有相同的注释信息要展示，可以用tree
object来更新tree view。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rstfile &amp;lt;- system.file(&amp;quot;extdata/PAML_Codeml&amp;quot;, &amp;quot;rst&amp;quot;, package=&amp;quot;ggtree&amp;quot;)
crst &amp;lt;- read.paml_rst(rstfile)
p %&amp;lt;% crst
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-10-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;
像上面的例子，用&lt;code&gt;crst&lt;/code&gt;来更新&lt;code&gt;p&lt;/code&gt;，就是用&lt;code&gt;crst&lt;/code&gt;画出来的树+注释。对比两图，可以发现BaseML和CodeML推测的祖先序列是稍有不同的。&lt;/p&gt;

&lt;p&gt;CodeML的dN/dS分析，我们可以直接把数据拿来给树上色。同样道理分类数据也可以拿来上色。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mlc_file &amp;lt;- system.file(&amp;quot;examples/mlc&amp;quot;, package=&amp;quot;ggtree&amp;quot;)
mlc &amp;lt;- read.codeml_mlc(mlc_file) 
ggtree(mlc, aes(color=dN_vs_dS)) + 
   scale_color_continuous(limits=c(0, 1.5), high=&#39;red&#39;, low=&#39;green&#39;, oob=scales::squish, name=&#39;dN/dS&#39;) + 
      theme(legend.position=&#39;right&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-11-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;h3 id=&#34;使用用户定义数据:d1d9992be5d6848a0489ec268963cadb&#34;&gt;使用用户定义数据&lt;/h3&gt;

&lt;p&gt;进化树已经被广泛应用于各种跨学科的研究中，随着实验技术的发展，各种数据也更易于获得，使用用户数据注释进化树，也是ggtree所支持的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nwk &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;sample.nwk&amp;quot;, package=&amp;quot;ggtree&amp;quot;)
tree &amp;lt;- read.tree(nwk)
p &amp;lt;- ggtree(tree)

dd &amp;lt;- data.frame(taxa  = LETTERS[1:13], 
             place = c(rep(&amp;quot;GZ&amp;quot;, 5), rep(&amp;quot;HK&amp;quot;, 3), rep(&amp;quot;CZ&amp;quot;, 4), NA),
                 value = round(abs(rnorm(13, mean=70, sd=10)), digits=1))
## you don&#39;t need to order the data
## data was reshuffled just for demonstration
dd &amp;lt;- dd[sample(1:13, 13), ]
row.names(dd) &amp;lt;- NULL
print(dd)

##    taxa place value
## 1     A    GZ  68.8
## 2     J    CZ  56.8
## 3     L    CZ  74.7
## 4     C    GZ  53.3
## 5     F    HK  62.8
## 6     B    GZ  60.8
## 7     E    GZ  87.1
## 8     M  &amp;lt;NA&amp;gt;  70.9
## 9     H    HK  67.0
## 10    G    HK  59.8
## 11    I    CZ  77.7
## 12    K    CZ  69.8
## 13    D    GZ  66.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在上面的例子中，使用一个分类数据和一个连续型数据，输入的唯一要求是第一列是taxon
label。ggtree中定义了操作符&lt;code&gt;%&amp;lt;+%&lt;/code&gt;，来添加数据。添加之后，用户的数据对ggplot是可见的。可以用于树的注释。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- p %&amp;lt;+% dd + geom_text(aes(color=place, label=label), hjust=-0.5) + 
       geom_tippoint(aes(size=value, shape=place, color=place), alpha=0.25)
p+theme(legend.position=&amp;quot;right&amp;quot;)       
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-13-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;p&gt;ggtree还支持用户把自己的数据和树保存为jplace格式。&lt;/p&gt;

&lt;p&gt;更多的实例请参考&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/vignettes/ggtree/inst/doc/ggtree.html#tree-annotation-with-output-from-evolution-software&#34;&gt;vignette&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;ggtree允许把不同软件的分析结果整合在一起，同时在树上展示或者比较结果。在我们提交的论文中，使用了整合BEAST和CodeML的例子，在树上展示dN/dS、时间轴、氨基酸替换、clade
support values、物种和基因型
(genotype）等多维信息，6种不同的信息同时展示在一颗进化树上，这是个复杂的例子，我们在附件1中展示了可重复的代码。如果有兴趣，可以留意一下我们的文章。
:)&lt;/p&gt;

&lt;h2 id=&#34;其它好玩的功能:d1d9992be5d6848a0489ec268963cadb&#34;&gt;其它好玩的功能&lt;/h2&gt;

&lt;p&gt;我们把树当成节点的集合，而不是线条的集合，这一点回归到了进化树的本质意义上，使这一实现成为可能。而支持图形语法，与ggplot2的无缝衔接又让注释变得更加容易。&lt;code&gt;ggtree&lt;/code&gt;为我们打开了各种注释和操作的可能性。甚至于可以创造出好玩的图，比如使用showtext来&lt;a href=&#34;http://guangchuangyu.github.io/2015/06/ggtree-with-funny-fonts/&#34;&gt;加载图形化的字体&lt;/a&gt;、&lt;a href=&#34;http://guangchuangyu.github.io/2015/12/use-emoji-font-in-r/&#34;&gt;用emoji来画树&lt;/a&gt;、&lt;a href=&#34;http://guangchuangyu.github.io/2015/08/ggtree-annotate-phylogenetic-tree-with-local-images/&#34;&gt;使用图片来注释树&lt;/a&gt;等等。&lt;/p&gt;

&lt;p&gt;一个比较正经又好玩的是使用PhyloPic数据库上的图形。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pp &amp;lt;- ggtree(tree) %&amp;gt;% phylopic(&amp;quot;79ad5f09-cf21-4c89-8e7d-0c82a00ce728&amp;quot;, color=&amp;quot;steelblue&amp;quot;, alpha = .3)
pp + geom_tiplab(align=T, linetype=&#39;dashed&#39;, linesize=.5) + geom_tippoint(color=&#39;firebrick&#39;, size=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/ggtree_cos_files/figure-markdown_strict/unnamed-chunk-14-1.png&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;p&gt;另一个好玩又为我们展现各种可能性的是&lt;a href=&#34;http://guangchuangyu.github.io/2015/08/subview/&#34;&gt;subview&lt;/a&gt;函数，它使得图上加小图变得特别容易。并且已经被应用于&lt;a href=&#34;http://stackoverflow.com/questions/10368180/plotting-pie-graphs-on-map-in-ggplot/32380396#32380396&#34;&gt;地图上加饼图&lt;/a&gt;。解决这个问题的初衷在于，想要给节点加饼图注释。有了subview函数之后，这会变得很容易，当然我还没有写出给节点加饼图的函数，因为我还没有这个需求，得有一些实际的数据做参考，这样才能够设计出更易用的函数呈现给用户。&lt;/p&gt;

&lt;p&gt;很多的功能还在开发之中，有问题/建议请及时在&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree/issues&#34;&gt;Github&lt;/a&gt;上报告(中英文都可以)。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>喜新厌旧之hello Hugo</title>
      <link>http://guangchuangyu.github.io/cn/2015/12/%E5%96%9C%E6%96%B0%E5%8E%8C%E6%97%A7%E4%B9%8Bhello-hugo/</link>
      <pubDate>Fri, 04 Dec 2015 00:42:26 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2015/12/%E5%96%9C%E6%96%B0%E5%8E%8C%E6%97%A7%E4%B9%8Bhello-hugo/</guid>
      <description>

&lt;p&gt;最早在China Unix上写博客，后来转战新浪。在&lt;a href=&#34;http://azaleasays.com/&#34;&gt;azelea&lt;/a&gt;的说服下，&lt;a href=&#34;http://guangchuangyu.github.io/2008/09/%E5%8D%9A%E5%AE%A2%E8%BD%ACwordpress/&#34;&gt;果断换成wordpress&lt;/a&gt;，写技术博客贴点代码什么的，新浪必须是太渣。&lt;a href=&#34;http://azaleasays.com/&#34;&gt;azelea&lt;/a&gt;是我开始独立博客的领路人，为我提供了空间和域名。再后来自己买了空间和&lt;code&gt;ygc.name&lt;/code&gt;的域名，用了好几年。本来一直有想法要换成github+jekll，恰巧&lt;a href=&#34;http://blog.shenwei.me/&#34;&gt;Wei Shen&lt;/a&gt;强力推荐HUGO。于是再一次换博客。&lt;/p&gt;

&lt;p&gt;首先面临着wordpress迁移的问题。&lt;/p&gt;

&lt;h1 id=&#34;导入wordpress-posts为markdown文件:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;导入wordpress posts为markdown文件&lt;/h1&gt;

&lt;p&gt;试用了多个插件或脚本，都是各种出错。最后发现了神器&lt;a href=&#34;https://github.com/jprichardson/potter-wordpress&#34;&gt;potter-wordpress&lt;/a&gt;，通过npm安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g pottercms-wordpress
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后一个语句:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;potter-wordpress -h WORDPRESS_SITE_URL -u USER_NAME -p PASSWORD --dir PATH_TO_STORE_MD_FILES
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自动从线上把posts抓下来，并转化为&lt;code&gt;markdown&lt;/code&gt;。在之前各种搞不定之后，看到下面的输出有种莫名的快感。&lt;/p&gt;

&lt;p&gt;Fetching articles&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   Got : [Sun Nov 29 2015] R kernel in Jupyter notebook 3
   Got : [Mon Nov 09 2015] phylomoji with ggtree
   Got : [Tue Nov 17 2015] 合体中的操作系统
   Got : [Mon Nov 02 2015] Comparison of clusterProfiler and GSEA-P
   Got : [Thu Oct 01 2015] ChIPseq data mining with ChIPseeker
   Got : [Tue Oct 06 2015] TRIE
   Got : [Thu Oct 15 2015] [BioC 3.2] NEWS of my BioC packages
   Got : [Wed Oct 21 2015] use simplify to remove redundancy of enriched GO terms

   ...

   Got : [Mon May 14 2007] Edit partition table in NetBSD/macppc
   Got : [Mon May 14 2007] 我的emacs配置文件
   Got : [Mon May 14 2007] pkgsrc tips
   Got : [Thu May 03 2007] scilab三维平面绘图
   Got : [Sat Jun 24 2006] qvwm窗口管理器的windows2000主题
   Got : [Wed Jun 14 2006] 安装os9和netbsd双系统
   Got : [Sat May 28 2005] 在emacs里使用maxima
   Got : [Mon Mar 14 2005] scau校园网认证
   Got : [Fri Jan 14 2005] Powerbook G3上安装gentoo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Done.&lt;/p&gt;

&lt;h1 id=&#34;导出wordpress的评论:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;导出wordpress的评论&lt;/h1&gt;

&lt;p&gt;安装&lt;code&gt;Disqus Comment System plugin&lt;/code&gt;， 点击&lt;code&gt;Export comments to Disqus&lt;/code&gt;搞定&lt;/p&gt;

&lt;p&gt;再到Disqus后台弄迁移，做个域名映射。&lt;/p&gt;

&lt;h1 id=&#34;安装hugo:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;安装HUGO&lt;/h1&gt;

&lt;p&gt;安装hugo对于Mac用户来说，太容易，brew大法搞定。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install hubo
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;mathjax支持:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;MathJax支持&lt;/h1&gt;

&lt;p&gt;把下面的代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;
  src=&amp;quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;
&amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt;
MathJax.Hub.Config({
  tex2jax: {
    inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],
    displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\[&#39;,&#39;\]&#39;]],
    processEscapes: true,
    processEnvironments: true,
    skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;],
    TeX: { equationNumbers: { autoNumber: &amp;quot;AMS&amp;quot; },
         extensions: [&amp;quot;AMSmath.js&amp;quot;, &amp;quot;AMSsymbols.js&amp;quot;] }
  }
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加入主题到文件&lt;code&gt;layouts/partials/foot.html&lt;/code&gt;中，就可以实现&lt;code&gt;$\LaTeX$&lt;/code&gt;公式的解析。&lt;/p&gt;

&lt;h1 id=&#34;social网分享:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;social网分享&lt;/h1&gt;

&lt;p&gt;使用&lt;a href=&#34;http://www.sharethis.com&#34;&gt;ShareThis&lt;/a&gt;.
把下面代码加到&lt;code&gt;layouts/post/single.html&lt;/code&gt;的适当位置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span class=&#39;st_twitter_hcount&#39; displayText=&#39;Tweet&#39;&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;span class=&#39;st_facebook_hcount&#39; displayText=&#39;Facebook&#39;&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;span class=&#39;st_sina_hcount&#39; displayText=&#39;Sina&#39;&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;span class=&#39;st_linkedin_hcount&#39; displayText=&#39;LinkedIn&#39;&amp;gt;&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再加&lt;code&gt;script&lt;/code&gt;加到&lt;code&gt;layouts/partials/foot.html&lt;/code&gt;中。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;http://w.sharethis.com/button/buttons.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;stLight.options({publisher: &amp;quot;d135f460-3fc5-4802-8169-bd08e4734a09&amp;quot;, doNotHash: false, doNotCopy: false, hashAddressBar: false});&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;代码高亮:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;代码高亮&lt;/h1&gt;

&lt;p&gt;加代码到&lt;code&gt;layouts/partials/foot.html&lt;/code&gt;中。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.1.0/styles/zenburn.min.css&amp;quot;&amp;gt;
&amp;lt;script src=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.1.0/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;访问统计:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;访问统计&lt;/h1&gt;

&lt;p&gt;以前在wordpress中使用&lt;a href=&#34;http://flagcounter.com/gmap/88/&#34;&gt;flagcounter&lt;/a&gt;，现在发现了&lt;a href=&#34;https://www.revolvermaps.com/?target=enlarge&amp;amp;i=5qpvv5zz7fp&#34;&gt;RevolverMaps&lt;/a&gt;，功能更好，把相应的代码加到sidebar中去即可。2016-03-18开始记录访问。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>合体中的操作系统</title>
      <link>http://guangchuangyu.github.io/cn/2015/11/%E5%90%88%E4%BD%93%E4%B8%AD%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 17 Nov 2015 16:06:59 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2015/11/%E5%90%88%E4%BD%93%E4%B8%AD%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;更新EI Capitan已经近一个月，第一感觉就是明显变慢了。这是去年买的27&amp;rsquo;
iMac，必须不慢。MS
office程序可以打开，但打开文档直接闪退。升级安装总会有些问题，就像我去年在笔记本上&lt;a href=&#34;http://guangchuangyu.github.io/2014/11/hello-yosemite/&#34;&gt;升级yosemite&lt;/a&gt;一样，最后两分钟始终过不去，迫使我&lt;a href=&#34;http://guangchuangyu.github.io/2014/11/hello-yosemite/&#34;&gt;全新安装&lt;/a&gt;，当时我看后台记录就发现了是MacTex拷不过去，后来MacTex的网站上也写了升级Yosemite有这个问题。升级有些小问题是可以预见的，但很少有像EI
Capitan这么多的问题。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.macworld.com/article/2987277/operating-systems/os-x-el-capitan-review-mac-upgrade-thats-as-solid-as-a-rock.html&#34;&gt;Macworld EI Capitan review&lt;/a&gt;文章中有人这样评论：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;haha nice review ! did you tried the update ?? slow connection safari
freezes on launch outlook crash printer does not work anymore great
job from Apple . My confidence in Apple has been seriously dented!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最不可思议的是开发者发现升级后&lt;a href=&#34;https://ohthehugemanatee.org/blog/2015/10/01/how-i-got-el-capitain-working-with-my-developer-tools/&#34;&gt;开发工具都有问题&lt;/a&gt;了：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Last night I installed OSX’s new “El Capitain” update, and it broke
most of the tools I use in my daily life as a developer, including
homebrew and git.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;git我倒没发现有问题，不过subversion每次都要求我输入密码了，&lt;a href=&#34;https://discussions.apple.com/thread/7276820&#34;&gt;keychain&lt;/a&gt;问题也是普遍存在的。&lt;/p&gt;

&lt;p&gt;第一时间升级EI Capitan的原因是我想要Split View，做为一个&lt;a href=&#34;http://guangchuangyu.github.io/2014/06/use-linux-desktop-again/&#34;&gt;tiling window manager&lt;/a&gt;的爱好者，Split
View是有吸引力的，分屏确实是有助于提高工作效率，然后我发现它竟然&lt;a href=&#34;http://www.cnet.com/how-to/how-to-use-split-view-in-os-x-el-capitan/&#34;&gt;没有键盘操作&lt;/a&gt;！！！WTF，这个功能显然又是iPad送的，Apple并不是为了所谓的提高工作效率，而是为了消耗iPad过多的计算能力，可以让你一边聊天一边还在打游戏，顺道又送给了OS
X。&lt;/p&gt;

&lt;p&gt;总的来说，我的吐槽只有一点，电脑长得越来越像手机了，但手机我已经有了，我不需要也不想电脑跟手机一样。&lt;/p&gt;

&lt;p&gt;PC的发展历程中经历了一次成功的合体，那就是工作站X了桌面系统，不管是微软还是苹果，都是这样。&lt;/p&gt;

&lt;p&gt;微软当年9x系列的桌面系统，NT系列的工作站系统，首次尝试合体是windows
2000，但2k与其说是合体，倒不如说是把NT推向大众的桌面，所以不太成功，因为大量的游戏不兼容，用户不买帐，但用户又喜欢2k的漂亮界面。微软给出了两个方案，一个是2k上面打游戏补丁，一个是9x内核+2k界面的ME系统。最终合体成功的是XP，XP两个字母来自于eXPerience，旨在给用户更好的体验。实际上2k比XP稳定，且2k土灰土灰的界面，如果长期盯着电脑看的话，对眼睛比较友好。是我所喜欢的经典系统之一。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2006/06/qvwm.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;当年苹果笔记本(Power构架) + NetBSD + 仿2k界面，这样的合体非常好👍。&lt;/p&gt;

&lt;p&gt;很多人不知道win7为什么版本是7，因为NT出到4，2k是版本5，XP是6，不要跟我说什么Vista，那只是微软进展太慢，而苹果每年一新版本，压力太大，把半成品拿出来，微软自己也没给Vista个主版本号。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2007/06/os9.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;苹果也经历了这样的合体，当年的os
9当然比win98好很多，但如果要跟工作站出身的2k比的话，完全没法比。乔帮主被苹果赶走了，专心在搞工作站，推出了NeXTStep操作系统。苹果笔记本
+ NetBSD + 仿NeXTStep界面，这样的合体也非常好💪。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2007/06/wmaker.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;乔帮主回到苹果后，也是一次合体，于是有了OS X，就像2k一样，刚出来的OS
X用户也不买帐，同样的原因，软件不兼容。到了10.2
Jaguar情况才好转，而到了10.4
Tiger的时候，速度提升了很多，系统已经非常现代化，而XP界面是如此粗糙，苹果再一次领先，且因为走了Intel路线，微软压力山大。&lt;/p&gt;

&lt;p&gt;一直到OS X 10.6 Snow Leopard和Windows
7，都是这次合体的延续，都是成功的，至此经典系统宣布结束。从10.7
Lion开始，苹果开始尝试让手机系统和桌面系统合体，微软后来跟上，推出Win8，应该说OS
X还是没有太多的违和感，但微软合体的结果就是同时拥有鼠标键盘操作和触屏操作两套界面，违和感太强！已吐槽无力。Ubuntu所采用的Unity也是为手持设备设计的，实际上Canonical已经开始在做手持设备了。所以我也不喜欢Unity，&lt;a href=&#34;http://guangchuangyu.github.io/2014/06/use-linux-desktop-again/&#34;&gt;i3是最好的选择&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;从最初iPad送来了LaunchPad，到现在EI Capitan的Split
View。对于有键盘的电脑来说，Spotlight是最好的程序启动器，而Split
View嘛，还得靠BTT：
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/screenshots/Screenshot%202015-11-13%2011.33.50.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;现在这些系统做得好像你对着电脑屏幕用手指戳就行了，他们完全不在乎你的电脑压根就戳不动，就算戳得动，用处也不大，键盘是工作中最好的人机交互👻。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BMC Favor Plagiarism</title>
      <link>http://guangchuangyu.github.io/cn/2015/05/bmc-favor-plagiarism/</link>
      <pubDate>Sun, 17 May 2015 21:51:43 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2015/05/bmc-favor-plagiarism/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/ppiPre/index.html&#34;&gt;ppiPre&lt;/a&gt;抄袭了&lt;a href=&#34;https://github.com/GuangchuangYu/GOSemSim&#34;&gt;GOSemSim&lt;/a&gt;的代码，证据当然非常充分，比对一下代码就知道了，我在&lt;a href=&#34;http://guangchuangyu.github.io/2014/11/proper-use-of-gosemsim/&#34;&gt;Proper use of GOSemSim&lt;/a&gt;一文中，做出了一些比较，另外也可以参考&lt;a href=&#34;https://github.com/cran/ppiPre/commit/c267700ca09a599dab77326959a0aa6a2980ceed&#34;&gt;github&lt;/a&gt;页面，github记录了ppiPre被暴光抄袭之后所做的修改。
从我给BMC Systems
Biology的编辑反馈这件事开始，在这铁板钉钉的事实面前，编辑拖了整整一年，而这一年时间过去了，ppiPre仍没有被编辑部受理。从最早反应这件事情，编辑信誓旦旦说他们很重视这种事情，到后面对我的邮件视而不见，我愿意相信编辑部处理这些事情，需要时间，他们有自己的规则，但一年的时间，不回邮件，冷处理以淡化此事，这绝对不是应该有的规则。
在编辑一直无视我的情况下，我写出了&lt;a href=&#34;http://guangchuangyu.github.io/2014/11/proper-use-of-gosemsim/&#34;&gt;Proper use of GOSemSim&lt;/a&gt;一文，列举了一些一模一样的代码，并告知CRAN，当ppiPre被CRAN移除时，我写信给编辑，这时候，编辑告诉我说他们准备要去联系作者了，这时候已经过去半年了，是的！你没有看错，半年过去了，编辑说他们还没去联系作者！我是不相信的。必然是联系了之后，有某些不为人知的原因，所以编辑态度反常，对抄袭这种打鸡血的事情，不断在打太极。
再过二个月，ppiPre的作者&lt;a href=&#34;http://web.xidian.edu.cn/dengyue/&#34;&gt;邓岳&lt;/a&gt;给我写了信：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/plagiarism/Screenshot%202015-06-08%2020.19.23.png&#34; alt=&#34;&#34; /&gt;
按照我在&lt;a href=&#34;http://guangchuangyu.github.io/2014/11/proper-use-of-gosemsim/&#34;&gt;Proper use of GOSemSim&lt;/a&gt;中说的:&amp;ldquo;你们可以抄我的代码，但要注明出处，引用我的文章&amp;rdquo;，进行了修改。我给他回信就是我可以接受这样的版本。事实上如果他们基于现在的版本发表文章，我没有任何问题。但现在的版本是迫于抄袭暴光所做出的修改，而发表文章时，抄代码不注出处，更改函数名，刻意回避我的文章，而且对抄袭部分在他们的文章中宣称是自己的实现，这是恶意抄袭。
回信说现在的版本OK之后，我觉得这会给出错误信息，于是我再写一封信，强调抄袭的严重性：
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/plagiarism/Screenshot%202015-06-08%2020.18.52.png&#34; alt=&#34;&#34; /&gt;
从他的回信中，我感觉得出，态度并不好。他觉得只是对open
source的版权不够重视而已，这不单单是版权的问题，还是出版伦理（publication
ethics）的问题，再怎么对版权无知，你不能发表文章说别人做的东西是你做的。
事实上邓岳并没有意识到问题，2015年继续发表抄袭的R包&lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4321842/&#34;&gt;HPOSim&lt;/a&gt;，这个包的代码抄袭了哈医大李霞实验室的&lt;a href=&#34;http://www.biomedcentral.com/1471-2105/12/266&#34;&gt;DOSim&lt;/a&gt;，而DOSim又是抄了&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/GOSim.html&#34;&gt;GOSim&lt;/a&gt;，我手贱对比了一下代码，竟然发现抄袭链条，而且抄袭者都发了文章，但发完文章，相应的包也就被CRAN移除了，要么是不维护，要么是主动要求移除。这个圈子好乱有木有！
我也没必要去跟他掐，而是等待编辑的处理，我期望编辑给他上一课，做科研没有这样的捷径。&lt;/p&gt;

&lt;p&gt;最终编辑给出的邮件是：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dear Guangchuang,&lt;/p&gt;

&lt;p&gt;Looking back through my emails, I did receive a response back from the authors previously. They in turn said that the email address I had originally been trying to contact them with earlier last year was no longer in use, so they only received my emails when I found an additional alternative email address for the authors in my more recent emails.&lt;/p&gt;

&lt;p&gt;Their explanation for the use of your code was that as the similarity measures were not their main focus of their study they had intended to either implement existing methods themselves or as in the case of GoSemSim, import the packages. However they had some problems with this and instead utilised the source code directly. Their rationale was that as the code was GPL licenced that this was acceptable, without realising that it was also required to cite the original source.&lt;/p&gt;

&lt;p&gt;They say they have now created an updated version which they say has the following changes:&lt;/p&gt;

&lt;p&gt;(1) ppiPre imports GOSemSim.&lt;/p&gt;

&lt;p&gt;(2) ppiPre calls function geneSim() exported by GOSemSim to calculate Wang’s measure, instead of deriving code from GOSemSim directly.&lt;/p&gt;

&lt;p&gt;(3) Several internal functions of ppiPre (TCSSGetAncestors, GetOntology, GetGOParents, GetLatestCommonAncestor, TCSSCompute_ICA) are derived from GOSemSim since GOSemSim don’t export them. In source code (.R) and manuals (.RD), acknowledgement has been added including the information of author and publication of GOSemSim.
(4) The author of GOSemSim (Guangchuang Yu) has been added in the ‘Author’ filed as contributor, as required by CRAN Repository Policy.
(5) All the information content data in data directory of ppiPre have been removed. ppiPre directly obtained data from GOSemSim.&lt;/p&gt;

&lt;p&gt;This version has been available in SourceForge (&lt;a href=&#34;https://sourceforge.net/p/ppipre/&#34;&gt;https://sourceforge.net/p/ppipre/&lt;/a&gt;). And we are submitting ppiPre to CRAN. We will notify you after ppiPre is available on CRAN.&lt;/p&gt;

&lt;p&gt;They also apologise for failing to cite you correctly and have asked if they may submit a correction to their article to rectify this. This would be within our policy if this sounds acceptable to you. Please let me know if you would need more details or if you need to get in touch with the authors&lt;/p&gt;

&lt;p&gt;Best wishes,
Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;列举的几点跟邓岳给我的中文信一样，但多了两点： 1.
强调这是由于对版权的无知。 2. 抄袭的，不是文章的重点。
1是给自己找个借口，犯错是因为无知。2则淡化的抄袭的严重性。完全没有认错的意思。我们完全可以想像，所谓的“they
may submit a correction to their article to rectify
this”是什么样子的。所以我不能接受。
如果是真心认错，不遮遮掩掩，大胆地接受所犯的错误，那么发表声明，对此事进行道歉，我可以接受。
但在作者没有认错的情况下，在编辑最后明显倾向性的言语中，我无法接受，无知是对版权，你做科研，能发paper说别人的东西是自己的？总不能这样无知吧？代码2/3是抄GOSemSim的，并且文章中大篇幅在说实现了这些算法，还能睁眼说瞎话，说不是重点，就差说出来not
a big deal了。
我坚决不能同意，于是回信给了编辑，然而编辑又再次遁了！一年以来，不是我不断给编辑压力，编辑根本就无视我，而最后到了该给个说法的时候了，又继续玩消失。要说没有内幕，有人相信么？我反正是不信。
对于抄袭，这是铁的事实，开源和版权，不是重点，这本身是严重的出版伦理问题。而这一整年编辑的表现，又使这一事情，呈现出更严重的一面，编辑一直在袒护抄袭者，这是非常反常的，编辑对这种事情，一直应该是打鸡血的，他们善于站在道德的制高点，对科研工作者指手画脚，而BMC也一直以此宣传他们，像今年撤了四十多篇中国的文章，说是manipulating
review process，这种事情大家也是非常支持的，再怎么想文章，不能走偏门。
正如&lt;a href=&#34;http://www.stat.columbia.edu/~gelman/&#34;&gt;Andrew
Gelman&lt;/a&gt;在评论ppiPre抄袭这件事时说的：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;we’re talking about people who already are skating on the ethical edge (as scientists, we should always respond to serious criticism; if we don’t, that’s bordering on ethical violation already)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;做为科研工作者，我们已经在道德的边缘上如履薄冰，对严重批评不做出回应，则已然是违反道德。
BMC现在就是在做违反道德的事情，非常反常！这可能是比&amp;rsquo;manipulating review
process&amp;rsquo; 更严重的mainipulating editorial
board。我知道掐这事于我没有任何好处，还会得罪很多人，但科研的正义必须维护，抄袭的行为必须打击，编辑部腐败更不能容忍！这件事情必须得有个说法。
ppiPre是发表在&lt;a href=&#34;http://www.aporc.org/ISB/2012/&#34;&gt;ISB
2012&lt;/a&gt;会议上的，这个会议明显是和BMC
Systems Biology合作的，会议文章发表在BMC Systems
Biology专刊上，而ppiPre的通讯作者&lt;a href=&#34;http://web.xidian.edu.cn/lgao/&#34;&gt;高琳&lt;/a&gt;是会议的Program
Chairs，而某些BMC Systems Biology的编委是General
Chairs，通讯作者和BMC编委是认识的，于是我空穴来风地猜测了一下，某些编委不顾道德伦理在袒护ppiPre的抄袭行为。事情真相到底是什么，期待BMC最终能给个说法。如果抄袭都能不撤稿，如果编委都能被操控，我们有什么理由相信科研！还不如趁早转工业界去赚点养家糊口的钱。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R binary is untrustable</title>
      <link>http://guangchuangyu.github.io/cn/2014/07/r-binary-is-untrustable/</link>
      <pubDate>Thu, 24 Jul 2014 04:22:35 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2014/07/r-binary-is-untrustable/</guid>
      <description>&lt;p&gt;去年ubuntu下apt-get了R-3.0.2,
用了没多久就发现了system命令有问题，通常情况下调用系统命令是正常的，但是我调用bowtie的时候，就会报错：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Warning: Could not open read file &amp;quot;/tmp/8156.inpipe1&amp;quot; for reading; skipping...
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align --wrapper basic-0 -p 12 -x /ssd/genomes/hg19 -S tmp.sam -1 /tmp/8156.inpipe1 -2 /tmp/8156.inpipe2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这很明显是因为fasta.gz文件，bowtie需要调用zcat来读的，在R里调用bowtie就找不到好基友zcat的输出管道。当时没在意，R不干，那就找shell。
去年用NMF包的时候，报出了人类不友好的错误，联系了包作者Gaujoux，在作者的帮助下，找到了是doParallel包的问题：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; library(doParallel)
&amp;gt; Loading required package: foreach
foreach: simple, scalable parallel programming from Revolution Analytics
Use Revolution R for scalability, fault tolerance and more.
http://www.revolutionanalytics.com
Loading required package: iterators
Loading required package: parallel

&amp;gt;
registerDoParallel(11)
&amp;gt; &amp;gt;
foreach(i = 1:10) %dopar% { getwd() }

&amp;gt;
 *** caught segfault ***
address 0x7fbeb6d399d0, cause &#39;memory not mapped&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其实parallel包中用mclapply也是同样报错。于是又把维护deb包的Dirk拉进来，Dirk是Rcpp的作者，高人就是不一样，看了错误，立刻就指出是BLAS库的问题。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Sorry -- I have no idea what this is about and no ability whatsoever to do
debugging for your here.  Segfaults like this are rarely due to R&#39;s build are
more often due to the BLAS libraries you plug in or out.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dirk指出他是用libopenblas的，我确实也是用这个的，重新用apt-get安装，确认和Dirk的一致，也是有问题的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@jz:/home/ygc# ps aux |grep exec/R
root     26790  0.6  0.4 282124 132156 pts/3   Sl+  15:30   0:00 /usr/lib/R/bin/exec/R
root     26799  0.0  0.3 273920 129776 pts/3   S+   15:30   0:00 /usr/lib/R/bin/exec/R
root     26800  0.0  0.3 273920 129760 pts/3   S+   15:30   0:00 /usr/lib/R/bin/exec/R
root     26821  0.0  0.0   6300   596 pts/0    S+   15:31   0:00 grep exec/R
root@jz:/home/ygc# lsof -p 26790 |grep &#39;blas\|lapack&#39;
R       26790 root  mem    REG   8,17 10294080  48234941 /usr/lib/lapack/liblapack.so.3.0
R       26790 root  mem    REG   8,17 19536904  49942482 /usr/lib/openblas-base/libopenblas.so.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我自己编译的R，使用的是libRblas，完全没有问题，不过性能没有libopenblas好。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@jz:~/R-3.0.2# ps aux |grep exec/R
ygc      22938 80.9  0.4 257764 163560 pts/0   S+   13:36  89:14 /usr/lib/R/bin/exec/R
root     25609  0.0  0.0   6304   600 pts/3    S+   15:26   0:00 grep exec/R
root@jz:~/R-3.0.2# lsof -p 22938 |grep &#39;blas\|lapack&#39;
R       22938  ygc  mem    REG   8,17   4823581 49286712 /usr/lib/R/lib/libRlapack.so
R       22938  ygc  mem    REG   8,17    454082 49286705 /usr/lib/R/lib/libRblas.so
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于Dirk说无法重复我的错误，而我自己编译的版本也能够work了，这事情也就告一段落。&lt;/p&gt;

&lt;p&gt;前天用RMarkdown写了个slide，在R-3.1.0下面编译得好好的，手痒apt-get了R-3.1.1，改了一张slide，再编译的时候，各种错误。回到宿舍，用mac下编译又没问题，于是确定又是R的问题，ssh到实验室的机器，自己编译R，果然问题就不存在了，编译版的R实在是坑！！！不过我编译的版本也有问题，在画图时设置透明色时，会报错：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;semi-transparency is not supported on this device
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是由于机器缺少某些X11相关的库，于是更新r-base-dev以及安装它所需的所有库。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ygc@SPH:R-3.1.1$ sudo apt-get build-dep r-base-dev  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另外要安装tk-dev，然后在./configure的时候，指定：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;--with-tcltk --with-tcl-config=/usr/lib/tcl8.6/tclConfig.sh --with-tk-config=/usr/lib/tk8.6/tkConfig.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样才能支持tcltk。&lt;/p&gt;

&lt;p&gt;再次编译，整个世界就清静了！所以说，在linux下使用R，还是自己编译来得靠谱。由于环境的细小差别，预编译版的R，实在是各种坑！！！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>use linux desktop again</title>
      <link>http://guangchuangyu.github.io/cn/2014/06/use-linux-desktop-again/</link>
      <pubDate>Sun, 01 Jun 2014 07:57:46 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2014/06/use-linux-desktop-again/</guid>
      <description>&lt;p&gt;上个月写了《&lt;a href=&#34;http://guangchuangyu.github.io/2014/05/use-ggplot2/&#34;&gt;使用ggplot画图&lt;/a&gt;》一文，图片太多，一下子把博客的12G流量给用光了，月中博客就被停了，小伙伴们太给力了，blog不能访问，真是件不爽的事情。&lt;/p&gt;

&lt;p&gt;言归正传，从2002年使用redhat
7.1开始，就没中止过使用linux，为什么要说again呢，因为在过去几年的工作时间里，使用的是&lt;a href=&#34;http://guangchuangyu.github.io/2011/06/screen-shot/&#34;&gt;OS X&lt;/a&gt;和win7做为桌面的，linux只在服务器端使用。自从用了OS
X之后，就不想再用linux当桌面了，OS
X绝对是节省生命的系统，本身是unix-like系统，对各种桌面软件支持又好，特别是中华大地，linux还是小众，用来当桌面实在是各种坑。&lt;/p&gt;

&lt;p&gt;不过现在又回到学生时代了，所以还得继续学生屌丝的折腾，本科时从redhat,debian到gentoo，硕士时实验室的机器用ubuntu，而笔记本用NetBSD。这么多年的使用，该有的坑都填了，但是时代在发展，新坑还是不断有的，使用&lt;a href=&#34;http://guangchuangyu.github.io/2014/05/%E6%9B%B4%E6%94%B9%E7%99%BE%E5%BA%A6%E4%BA%91%E5%90%8C%E6%AD%A5%E7%9B%98%E8%B7%AF%E5%BE%84/&#34;&gt;百度云&lt;/a&gt;来同步化文献库，就是最近的新坑，装上linux之后，发现度娘没有客户端，首先想到的当然是wine，wine出来的偶尔能行，时常崩溃，跟它死磕我也会崩溃，github上寻找开源实现，各种功能缺失和限制，那就只能虚拟机了，把home目录做为共享盘，挂到虚拟机中，但是度娘一直都是占100%
CPU，然后数据无法同步，只有两个原因，不是硬盘就是网络，感觉好像我一个分区800G太大了，但在虚拟中对硬盘读写正常，网络因为使用NAT，虚拟成内网，有可能是这个原因，于是换成bridge，把虚拟机当成现实网络中的另一台主机，但度娘依然只占CPU，不干活。那只能还是硬盘问题，最后问题解决了，通过在linux中提供samba服务，然后在虚拟机中通过网上邻居把共享目录映射成网络驱动器，这时候度娘终于肯干活了。都不知道是virtualbox的驱动有问题，还是度娘太挑，这太TM坑了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/06/2014-05-22-161939_1024x768_scrot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;不想自己太geek，假装我在用windows 7，不过我还是喜欢当年的&lt;a href=&#34;http://guangchuangyu.github.io/2006/06/qvwm%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86%E5%99%A8%E7%9A%84windows2000%E4%B8%BB%E9%A2%98/&#34;&gt;windows 2000的主题&lt;/a&gt;，可惜qvwm已经很久不更新了，现在想编译成功已经非常困难了。&lt;/p&gt;

&lt;p&gt;假装了一星期，我就觉得用着很不爽，屏幕太小，又老用鼠标，手臂不舒服，于是想起了&lt;a href=&#34;http://guangchuangyu.github.io/2007/06/screenshot/&#34;&gt;当年的wmii&lt;/a&gt;，这次我装的是wmii的增强版&lt;a href=&#34;http://i3-wm.org/&#34;&gt;i3-wm&lt;/a&gt;，有了tab这些元素，用着更舒服一点，于是窗口都全屏了，这样小屏幕也还凑合了。最主要的是提高效率，减少鼠标操作，我现在把鼠标放在左上角，因为使用频率非常少，偶尔要用，就用左手搞一下。告别鼠标手，这酸爽，谁用谁知道！有了OS
X之后，linux桌面依然有吸引我的地方，最主要的就是tiling
windows，另外fcitx的五笔是我最喜欢的输入法。&lt;/p&gt;

&lt;p&gt;小屏毕竟还是不爽，准备把宿舍的显示器搬去实验室用了，囧rz&amp;hellip;
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/06/20140601_141609.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;搬来显示器之后，无比爽。
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/06/2014-06-05-132832_1920x1080_scrot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>更改百度云同步盘路径</title>
      <link>http://guangchuangyu.github.io/cn/2014/05/%E6%9B%B4%E6%94%B9%E7%99%BE%E5%BA%A6%E4%BA%91%E5%90%8C%E6%AD%A5%E7%9B%98%E8%B7%AF%E5%BE%84/</link>
      <pubDate>Mon, 05 May 2014 10:45:25 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2014/05/%E6%9B%B4%E6%94%B9%E7%99%BE%E5%BA%A6%E4%BA%91%E5%90%8C%E6%AD%A5%E7%9B%98%E8%B7%AF%E5%BE%84/</guid>
      <description>&lt;p&gt;从2007年写了&lt;a href=&#34;http://cjbmb.bjmu.edu.cn/CN/abstract/abstract17570.shtml&#34;&gt;第一篇文章&lt;/a&gt;之后，我发现管理文献真不是人干的，一直以来使用Zotero来管理文献，自从有了dropbox之后，就想把文献库放在dropbox上，一来有个云备份，不怕硬盘坏，二来嘛，实验室电脑和个人电脑可以实时同步化，无奈dropbox空间太小，而我的zotero早已超过10G，因为电子书也放在里面，只能做罢。&lt;/p&gt;

&lt;p&gt;度娘出手还是很大方的，我现在的网盘已经有3T，包括之前在推广阶段用1元买的1T。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/Screenshot-2014-05-05-21.31.57.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;于是我要把zotero放在度娘的网盘里，有可能是因为我用英文版，firefox不认中文路径。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/04/Screenshot-2014-04-30-17.44.16.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;第一反应就是给个英文路径的软链接，OS
X自带的Terminal和iTerm都不支持我输入中文，只能在Emacs里跑eshell来搞。事实证明软链接是不行的，会被还原回实际路径，依然是中文。&lt;/p&gt;

&lt;p&gt;那么就用硬链接，但是系统不干，真是邪门，搜索一下发现这是OS
X的问题，在&lt;a href=&#34;http://stackoverflow.com/questions/80875/what-is-the-unix-command-to-create-a-hardlink-to-a-directory-in-os-x&#34;&gt;stackoverflow&lt;/a&gt;上还有人提供了一段C代码来做硬链接，不过我编译后运行依然是失败，无法创建硬链接。&lt;/p&gt;

&lt;p&gt;于是只能土办法了，软件的路径并不是死的，那么总得有个配置文件来定位，通过修改配置文件总应该可以的吧。于是在下面的路径下，找到了macosnetdisk.plist&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/04/Screenshot-2014-04-30-18.02.09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    user_workpath
    /Volumes/DATA/Users/ygc/百度云同步盘
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把百度云同步盘换成个英文文件夹，整个世界清静了，firefox终于找到了它的好基友zotero。&lt;/p&gt;

&lt;p&gt;TIPS：有了度娘网盘，再也不用担心下载问题了，找个BT种子，让度娘下载，速度极快，因为通常的东西度娘的网盘上是有的，它做的不过是链接一份给你而已，越多的人保留同一份东西，度娘就越省空间。度娘同步到电脑上速度也是极快的，秒杀其它下载工具。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Permanent Head Damage to be</title>
      <link>http://guangchuangyu.github.io/cn/2013/07/permanent-head-damage-to-be/</link>
      <pubDate>Tue, 30 Jul 2013 16:18:26 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2013/07/permanent-head-damage-to-be/</guid>
      <description>&lt;p&gt;看似寻常最奇崛，成如容易却艰辛。在暨大工作了几年，发几篇小文章，觉得要找个地方读PhD，是件手到擒来的事，结果却花了整整一年的时间，事实证明像我这样的科研屌丝男，举步唯艰啊。
去年7月份就开始在计划这个事情，我几乎想都没想就联系了计算生物所的JD
Han，紧接着就是面试，第一次尝试用英文去讲slides，从早上10点讲到中午12点。感觉还好吧，因为有听到Han说impressive，而她的学生又说经常看我blog。看上去还是蛮顺利的，然而最终reject了我，而且没有给我任何原因。&lt;/p&gt;

&lt;p&gt;我去上海是非常低姿态的，说要面试，我就飞过去，当时想要是面试OK了，可能会让我留下来先了解一下正在进行的project，所以没有听老婆的话买返程票，结果从上海回广州，就变成了人在囧途，买不到火车票，就去南昌转车，结果遇到两趟车都是慢车，无空调，还无座。这个事情教会了我，不能太低姿态。&lt;/p&gt;

&lt;p&gt;我一直在想为什么会去上海，为什么会联系Han，或许是心理学上所谓的契可尼效应，俗称偷不如偷不着，当年考上生没中，心中依然有执念？我自认为早已释然，but
maybe..，至于Han，我在研一的时候，去北大听过她的讲座，被系统生物学这个概念忽悠了，可能因此内心抱有幻想。&lt;/p&gt;

&lt;p&gt;被reject了，我心中其实也是松了一口气，家人都觉得我跑上海太远，我也不想跑这么远，也希望能够照顾到家里，主要是广州没什么人做生信。&lt;/p&gt;

&lt;p&gt;如果没被reject，我回头想想，也不理想，我在讲slide的时候，讲到SVM，Han看到&lt;a href=&#34;http://guangchuangyu.github.io/2012/04/support-vector-machine/&#34;&gt;图&lt;/a&gt;时，以惊讶的语气问我，是我写的吗，在得到我的肯定之后，她讲了句impressive，可以看出，她欠缺这方面的能力，而我希望在PhD阶段，加强这方面的训练。&lt;/p&gt;

&lt;p&gt;我非常care家人的看法，被reject之后，就决定待广州，给中大的人写邮件，几乎只要和生信沾边的，我就联系。结果我只收到XL
He的回复，说no open
position。就我个人接触到的小样本来看，我觉得中大的人，特别自我感觉良好。ANYWAY，这让我感觉要找个地方读博，很难！&lt;/p&gt;

&lt;p&gt;到了9月，深圳先进院的FF
Zhou在LinkedIn上follow了我，于是我问他，招不招在职PhD，然后又去深圳讲了一次slides，Zhou说只要他有一个名额就肯定会给我，但还不确定是否有名额。不过我不喜欢多手准备，起码双方都觉得OK，那我就把鸡蛋放在他的篮子里。&lt;/p&gt;

&lt;p&gt;10月，同学告诉我科学城的健康院在招做生信的人，于是我就联系了DQ
Pei，结果是GJ
Pan联系了我，在达成意向之后，我就告诉深圳的Zhou说我要去健康院，接着就一直在科学城当免费劳动力，几个月的时间下来，让我看清了中科院的面目，这帮人自我感觉不是一般的良好，你要去读书，好像得求着他似的，而且不断给你营造一堆人在排队求着他呢。&lt;/p&gt;

&lt;p&gt;经历了计生所之后，我已经不低姿态了，我先和Pan谈好我要读在职。然而随着时间的推移，Pan不断地在加码，最初忽悠我跳槽；我拒绝之后，不断说很难考，我可能会考不上；再后来就说名额有限，先在他那里干一年，下一年再读博，我严厉拒绝，不行就走人，没得商量；等到我报了名之后，临考前又跟我讲，入学要跟我签协议。我感觉到非常之不爽，最主要是觉得此人没有信用，以后共事的话，很麻烦，我已经看到这是个坑了，就不会往下跳！但我依然要去考，之前一直说我考不上，我必然要拿到录取通知书，再去reject他们，到了复试的时候，刚好有事回家，就没去，想想也是好的，占个名额最后不去也不好，名额留给别人，大家都不容易。&lt;/p&gt;

&lt;p&gt;3月，在豆瓣的生信小组上看到&lt;a href=&#34;http://fullwoodlab.com/&#34;&gt;MJ Fullwood&lt;/a&gt;实验室招post-doc的信息，明显是人少钱多速来，我就询问是否有PhD
program，那时候NUS申请的deadline已经过了近一个月，Fullwood联系研院的人，重新打开系统，让我提交材料。4月1号出结果，我被reject，原因是GRE成绩太差，那是我08年考的。&lt;/p&gt;

&lt;p&gt;联系Fullwood主要是因为我对中科院很失望，想试一下投个简历得到别人的认可，同时也有寻求机会的一丝希望，但内心并不坚定。投NUS的时候，老婆非常支持，还一起规划要玩遍东南亚。于是我就坚定了，就有动力了。&lt;/p&gt;

&lt;p&gt;4月1号被reject之后，我上NATURE
JOB上看招聘信息，当天我就联系了UQ和HKU，最终两个学校都给了我OFFER，老婆说好像突然小宇宙爆发了，我觉得出国对我来说，更容易。&lt;/p&gt;

&lt;p&gt;4月2号的早上就收到了&lt;a href=&#34;http://www.qbi.uq.edu.au/group-leader-visscher&#34;&gt;Peter Visscher&lt;/a&gt;的回信，约好了SKYPE的时间，当时使用联通的3G卡上网，不给力啊，带宽不够，带着电脑跑去西餐中的大排档绿茵阁，对方说背景太吵，于是约了第二天电话。聊了半个小时电话，达成意向，开始走学校的流程，很快UQ就给了我CONDITIONAL
OFFER，但是UQ非常龟毛，成绩单不能自己寄，我只能花钱让中介寄；学位要认证，我又得花钱去搞。还有我没有TOEFL成绩。&lt;/p&gt;

&lt;p&gt;因为没有出国的打算，没有事先准备好英语成绩，5月11号我才去考了次TOEFL，只有睡前听听科学美国人60秒播报，磨磨耳朵而已，基本属于裸考，只考了88分，UQ要求90分，后来决定去HKU，也就没必要去刷TOEFL了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.complextraitgenomics.com/&#34;&gt;Peter的实验室&lt;/a&gt;是做统计的，实力非常强，钱又非常多，光post-doc就有16个，我本来是准备去UQ的，但后来和HKU的老板SKYPE之后，互相感觉更合拍，于是我就选择了HKU，本来意向是UQ，申请HKU是因为被NUS拒了，觉得申多个保险点，结果歪打正着，HKU才是我的菜。去香港也符合最初希望离家近一点的想法，正所谓不忘初心，方得始终。&lt;/p&gt;

&lt;p&gt;在这一年的时间里，老婆的支持是最重要的。感谢&lt;a href=&#34;http://www.professoren.tum.de/en/krackhardt-angela/&#34;&gt;Angela Krackhardt&lt;/a&gt;和&lt;a href=&#34;http://proteome.sysbiol.cam.ac.uk/lgatto/&#34;&gt;Laurent Gatto&lt;/a&gt;帮我写推荐信，Laurent还邀请我去剑桥大学，一度让我觉得HKU鸡肋。&lt;/p&gt;

&lt;p&gt;PS：半夜写这篇博文的时候，有两只萤火虫飞到我的台面上。我第一次如此近距离地观察萤火虫。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>enrichment analysis</title>
      <link>http://guangchuangyu.github.io/cn/2012/04/enrichment-analysis/</link>
      <pubDate>Sat, 28 Apr 2012 08:06:05 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2012/04/enrichment-analysis/</guid>
      <description>&lt;p&gt;经常看到一些饼图，描述某些事物的组成，比如说有钱人的学历分布，然后我们可以看到高学历所占比例并不高，根据这个比例下结论通常是错的，这些比例说明不了问题，如果把各种学历在总体人口中的分布做为背景进行考虑的话，你就会发现学历还是有点用的。
当我们用组学测定了一大堆分子之后，我们希望站在更高的角度去看这些分子和那些生物学过程相关。那么通常各种注释，对这些基因/蛋白进行分类，那么从分类的比例上，是不能草率下结论，正如上面有钱人学历分布的例子一样。我们需要把总体的分布考虑进去。
和某个注释/分类是否有相关性，把基因分成属于这一类，和不属于这一类两种，这就好比经典统计学中的白球和黑球的抽样问题。也可以列一个２x２的表，进行独立性分析。
以文章&lt;a href=&#34;http://cancerres.aacrjournals.org/content/62/16/4722&#34;&gt;Gene Expression in Ovarian Cancer Reflects Both Morphology and Biological Behavior, Distinguishing Clear Cell from Other Poor-Prognosis Ovarian Carcinomas&lt;/a&gt;所鉴定的差异基因为例。&lt;/p&gt;

&lt;p&gt;73个差异基因的Symbol，我把它转为 entrezgene
ID得到57个（漏掉的不管它，只是做为一个例子）:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; eg
 [1] &amp;quot;7980&amp;quot;   &amp;quot;3081&amp;quot;   &amp;quot;3162&amp;quot;   &amp;quot;3059&amp;quot;   &amp;quot;1545&amp;quot;   &amp;quot;1917&amp;quot;   &amp;quot;6696&amp;quot;   &amp;quot;5797&amp;quot;  
 [9] &amp;quot;6648&amp;quot;   &amp;quot;10397&amp;quot;  &amp;quot;6781&amp;quot;   &amp;quot;5817&amp;quot;   &amp;quot;1282&amp;quot;   &amp;quot;1284&amp;quot;   &amp;quot;6948&amp;quot;   &amp;quot;7077&amp;quot;  
[17] &amp;quot;5744&amp;quot;   &amp;quot;8566&amp;quot;   &amp;quot;1368&amp;quot;   &amp;quot;1474&amp;quot;   &amp;quot;11015&amp;quot;  &amp;quot;3306&amp;quot;   &amp;quot;728441&amp;quot; &amp;quot;2678&amp;quot;  
[25] &amp;quot;4286&amp;quot;   &amp;quot;3929&amp;quot;   &amp;quot;5095&amp;quot;   &amp;quot;2064&amp;quot;   &amp;quot;1428&amp;quot;   &amp;quot;6590&amp;quot;   &amp;quot;3569&amp;quot;   &amp;quot;2745&amp;quot;  
[33] &amp;quot;3912&amp;quot;   &amp;quot;978&amp;quot;    &amp;quot;5950&amp;quot;   &amp;quot;6539&amp;quot;   &amp;quot;9445&amp;quot;   &amp;quot;5004&amp;quot;   &amp;quot;9971&amp;quot;   &amp;quot;7453&amp;quot;  
[41] &amp;quot;2719&amp;quot;   &amp;quot;1410&amp;quot;   &amp;quot;1311&amp;quot;   &amp;quot;4653&amp;quot;   &amp;quot;4162&amp;quot;   &amp;quot;5358&amp;quot;   &amp;quot;3484&amp;quot;   &amp;quot;3486&amp;quot;  
[49] &amp;quot;2261&amp;quot;   &amp;quot;307&amp;quot;    &amp;quot;1672&amp;quot;   &amp;quot;4837&amp;quot;   &amp;quot;22795&amp;quot;  &amp;quot;486&amp;quot;    &amp;quot;4118&amp;quot;   &amp;quot;3915&amp;quot;  
[57] &amp;quot;10140&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面测试一下这些基因和化学刺激响应的相关性。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;goid &amp;lt;- “GO:0042221” # response to chemical stimulus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;那么做为背景，总体基因为N，属于“化学刺激响应”这个分类的基因有M个。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;allgeneInCategory &amp;lt;- unique(get(goid, org.Hs.egGO2ALLEGS))
M &amp;lt;- length(allgeneInCategory)
N &amp;lt;- length(mappedkeys(org.Hs.egGO))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;样本的大小是n，属于“化学刺激响应”这个分类的基因有k个。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;n &amp;lt;- length(eg)
k &amp;lt;- sum(eg %in% allgeneInCategory)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;白球黑球问题，最简单的莫过于用二项式分布，从总体上看，要拿到一个基因属于“化学刺激响应”这个分类的概率是M/N。那么现在抽了n个基因，里面有k个基于这个分类，p值为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; 1-sum(sapply(0:k-1, function(i) choose(n,i) * (M/N)^i * (1-M/N)^(n-i)))
[1] 8.561432e-10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;二项式分布，是有放回的抽样，你可以多次抽到同一基因，这是不符合的。所以这个计算只能说是做为近似的估计值，无放回的抽样，符合超几何分布，通过超几何分布的计算，p值为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; phyper(k-1,M, N-M, n, lower.tail=FALSE)
[1] 7.879194e-10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果用2x2表做独立性分析，表如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; d &amp;lt;- data.frame(gene.not.interest=c(M-k, N-M-n+k), gene.in.interest=c(k, n-k))
&amp;gt; row.names(d) &amp;lt;- c(&amp;quot;In_category&amp;quot;, &amp;quot;not_in_category&amp;quot;)
&amp;gt; d
                gene.not.interest gene.in.interest
In_category                  2613               28
not_in_category             15310               29
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个也有很多方法可以做检验，经典的有卡方检验和fisher&amp;rsquo;s exact test。
如果用卡方检验来做。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; chisq.test(d, )

    Pearson&#39;s Chi-squared test with Yates&#39; continuity correction

data:  d 
X-squared = 51.3849, df = 1, p-value = 7.592e-13
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对于２x２表来说，卡方检验通常也只能做为近似估计值，特别是当sample
size或expected all count比较小的时候，计算并不准确。 fisher&amp;rsquo;s exact
test，名副其实，真的就比较exact，因为它使用的是超几何分布来计算p值。这也是为什么fisher&amp;rsquo;s
exact test和超几何模式计算的p-值是一样的，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; fisher.test(d)

    Fisher&#39;s Exact Test for Count Data

data:  d 
p-value = 7.879e-10
alternative hypothesis: true odds ratio is not equal to 1 
95 percent confidence interval:
 0.1013210 0.3089718 
sample estimates:
odds ratio 
 0.1767937 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通常各种软件做GO富集性分析，都是使用超几何分布进行计算。
IPA软件则是使用fisher&amp;rsquo;s exact test来检验基因在某个网络中是否富集。
从这个例子上看，chi-squared
test的表现最差，binomial做为p值的近似估计还是不错的，因为计算较为简单。
富集性分析应用范围非常广，从&lt;a href=&#34;http://bioconductor.org/packages/devel/bioc/html/DOSE.html&#34;&gt;Disease Ontology&lt;/a&gt;,
&lt;a href=&#34;http://bioconductor.org/packages/devel/bioc/html/clusterProfiler.html&#34;&gt;Gene Ontology, KEGG&lt;/a&gt;,
到&lt;a href=&#34;http://bioconductor.org/packages/devel/bioc/html/ReactomePA.html&#34;&gt;Reactome Pathway&lt;/a&gt;等等。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Hackintosh</title>
      <link>http://guangchuangyu.github.io/cn/2012/03/installing-hackintosh/</link>
      <pubDate>Thu, 15 Mar 2012 04:47:26 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2012/03/installing-hackintosh/</guid>
      <description>&lt;p&gt;初中时在杂志上看到苹果的彩壳机，从此叔就开始成为了苹果的脑残粉，还在K6-2和win98那会，就在玩macintosh主题。&lt;/p&gt;

&lt;p&gt;本科时，通过&lt;a href=&#34;http://pearpc.sourceforge.net/&#34;&gt;PearPC&lt;/a&gt;来虚拟PowerPC，硬是在ATHLON XP 1700+这个破CPU上破了OS X Jaguar，那个慢啊，是无法忍受的。&lt;/p&gt;

&lt;p&gt;后来，有了一台&lt;a href=&#34;http://guangchuangyu.github.io/categories/powerbook&#34;&gt;powerbook&lt;/a&gt;，却拿它来装&lt;a href=&#34;http://guangchuangyu.github.io/2005/01/powerbook-g3%E4%B8%8A%E5%AE%89%E8%A3%85gentoo/&#34;&gt;gentoo&lt;/a&gt;和&lt;a href=&#34;http://guangchuangyu.github.io/2006/06/%E5%AE%89%E8%A3%85os9%E5%92%8Cnetbsd%E5%8F%8C%E7%B3%BB%E7%BB%9F/&#34;&gt;netbsd&lt;/a&gt;。从那里候开始，基本上就只用Linux/BSD。&lt;/p&gt;

&lt;p&gt;再后来，又有了一台&lt;a href=&#34;http://guangchuangyu.github.io/2011/06/screen-shot/&#34;&gt;macbook pro&lt;/a&gt;，除了出差，放在家里倒也没怎么用。囧rz&amp;hellip;
在国内的工作环境，用linux与人格格不入。但windows搞开发又有不顺手的。各种编译环境搭建起来让人作呕，而且没有&lt;a href=&#34;http://guangchuangyu.github.io/categories/shell/&#34;&gt;shell&lt;/a&gt;，用起来就是不够爽，虽然&lt;a href=&#34;http://guangchuangyu.github.io/categories/emacs/&#34;&gt;emacs&lt;/a&gt;自带eshell，但在windows下缺少各种命令行程序，也只能算廖胜于无。&lt;/p&gt;

&lt;p&gt;在北京那会，只用linux，因为有需要的时候可以&lt;a href=&#34;http://guangchuangyu.github.io/2008/09/%E9%80%9A%E8%BF%87%E5%B1%80%E5%9F%9F%E7%BD%91%E5%9C%A8linux%E4%B8%8B%E4%BD%BF%E7%94%A8windows%E7%9A%84%E7%A8%8B%E5%BA%8F/&#34;&gt;通过局域网运行windows程序&lt;/a&gt;。到了暨大，一直用win7，因为质谱相关的很多软件都只跑在winddows下，后来发现和我没啥关系，那些东西都在质谱房里搞。得益于机房里有一台机器跑&lt;a href=&#34;http://guangchuangyu.github.io/categories/linux&#34;&gt;CentOS&lt;/a&gt;，每天&lt;a href=&#34;http://guangchuangyu.github.io/2010/07/xming-windows%E4%B8%8B%E8%BF%9C%E7%A8%8Blinux%E6%A1%8C%E9%9D%A2/&#34;&gt;通过ssh&lt;/a&gt;，也免去了切换系统的麻烦，但是时间长了，我还是觉得诸多不便。&lt;/p&gt;

&lt;p&gt;前两天，突发奇想，不如把办公室里的dell机器装个黑苹果。可以应付国内的办公需求，同时也是个Unix-like系统，各种爽。&lt;/p&gt;

&lt;p&gt;装起来倒也顺利，只是网卡、显卡、声卡全不认。搞起来倒也不难，就是kext有点难找。这种文件相当于Linux的kernel module。搞驱动的时候，让我有种10年前玩redhat 7.2时的感觉。&lt;/p&gt;

&lt;p&gt;照例，有图有真相。
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2012/03/120315A000-e1331786719301.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>screen shot</title>
      <link>http://guangchuangyu.github.io/cn/2011/06/screen-shot/</link>
      <pubDate>Tue, 28 Jun 2011 12:17:30 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2011/06/screen-shot/</guid>
      <description>&lt;p&gt;买了苹果机，一直放在家里没用，准备开会带去用，拿过来装几个软件。&lt;/p&gt;

&lt;p&gt;校园网用锐捷是个比较讨厌的东西。当年在华农，光这&lt;a href=&#34;http://guangchuangyu.github.io/2005/03/scau%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81/&#34;&gt;认证&lt;/a&gt;就搞了很久。&lt;/p&gt;

&lt;p&gt;现在开源的认证客户端多了，搞起来也方便了，现在在linux下用的&lt;a href=&#34;http://code.google.com/p/xmuruijie/&#34;&gt;xmuruijie&lt;/a&gt;，就比当年&lt;a href=&#34;http://guangchuangyu.github.io/2005/03/scau%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81/&#34;&gt;mystar&lt;/a&gt;好用。&lt;/p&gt;

&lt;p&gt;估计xmuruijie也是可以在苹果机上用的，依赖python，搞不好还有些modules要装，懒得去弄，搜了一下，找到&lt;a href=&#34;http://code.google.com/p/mentohust/&#34;&gt;mentohust&lt;/a&gt;，当然需要改一下mac address，用万能的ifconfig搞定。&lt;/p&gt;

&lt;p&gt;为了编译软件，必要先装xcode，这个大家伙，4G多，中午挂到吃晚饭才下完。
然后就可以装各种open source的软件。&lt;/p&gt;

&lt;p&gt;mac上有fink支持debian一样的apt-get，还有原生的macport，gentoo的portage也支持，我选择使用&lt;a href=&#34;http://guangchuangyu.github.io/categories/bsd&#34;&gt;netbsd&lt;/a&gt;的pkgsrc来安装各种开源软件。&lt;/p&gt;

&lt;p&gt;以前用过比较长时间的netbsd，用着比较顺手。&lt;/p&gt;

&lt;p&gt;苹果机很酷的界面，又能使用熟悉的命令行，实在是爽-,-&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/06/屏幕快照-2011-06-28-下午07.54.21.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;更多截屏，请移步：&lt;a href=&#34;http://guangchuangyu.github.io/2007/06/screenshot/&#34;&gt;http://guangchuangyu.github.io/2007/06/screenshot/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Five things biologists should know about statistics</title>
      <link>http://guangchuangyu.github.io/cn/2011/06/five-things-biologists-should-know-about-statistics/</link>
      <pubDate>Fri, 24 Jun 2011 06:10:37 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2011/06/five-things-biologists-should-know-about-statistics/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.ebi.ac.uk/~birney/&#34;&gt;Ewan Birney&lt;/a&gt;最近的一篇博文（&lt;a href=&#34;http://genomeinformatician.blogspot.com/2011/06/five-statistical-things-i-wished-i-had.html&#34;&gt;Five statistical things I wished I had been taught 20 years ago&lt;/a&gt;
）讲述了统计对于生物学的重要性。&lt;/p&gt;

&lt;p&gt;一开始从RA
Fisher讲起，说生物压根就是统计。Fisher是个农业学家，他所建立的那些统计方法，都是从生物学问题出发。&lt;/p&gt;

&lt;p&gt;Ewan所谈及的五个方面分别是：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;1. Non parametric statistics. These are statistical tests which make a
bare minimum of assumptions of underlying distributions; in biology we
are rarely confident that we know the underlying distribution, and hand
waving about central limit theorem can only get you so far. Wherever
possible you should use a non parameteric test. This is Mann-Whitney (or
Wilcoxon if you prefer) for testing &amp;ldquo;medians&amp;rdquo; (Medians is in quotes
because this is not quite true. They test something which is closely
related to the median) of two distributions, Spearman&amp;rsquo;s Rho (rather
pearson&amp;rsquo;s r2) for correlation, and the Kruskal test rather than ANOVAs
(though if I get this right, you can&amp;rsquo;t in Kruskal do the more
sophisticated nested models you can do with ANOVA). Finally, don&amp;rsquo;t
forget the rather wonderful Kolmogorov-Smirnov (I always think it sounds
like really good vodka) test of whether two sets of observations come
from the same distribution. All of these methods have a basic theme of
doing things on the rank of items in a distribution, not the actual
level. So - if in doubt, do things on the rank of metric, rather than
the metric itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;学校里教统计，多半是t检验和ANOVA，这些方法都有assumption需要满足，比如正态分布啥的。多半大家是默认它满足，然后就开始套着用，这是比较危险的，如果assumption不满足，或者数据中有outliers，都可能会导致错误的结论。&lt;/p&gt;

&lt;p&gt;今年&lt;a href=&#34;http://guangchuangyu.github.io/2010/11/phosphoproteome-profile-of-human-lung-cancer-cell-line-a549/&#34;&gt;磷酸化谱的文章&lt;/a&gt;，用到了免疫组化，实验结果的量化是由医生给出来打分值，癌组织和癌旁组织两组数据，免疫组化的数据不可能用参数统计，这个结果我就是用Wilcoxon
signed rank test去做检验。文中所提出的其它非参统计方法，全都不会。囧&lt;/p&gt;

&lt;p&gt;关于相关性，这里有篇文章，比较了Pearson和Spearman： &lt;a href=&#34;http://www.jstor.org/stable/2346598&#34;&gt;On the Effects of
Non-Normality on the Distribution of the Sample Product-Moment
Correlation Coefficient&lt;/a&gt; (Kowalski,
1975)&lt;/p&gt;

&lt;p&gt;还有文章说用Kendall&amp;rsquo;s tau比Spearman&amp;rsquo;s Rho要好： Newson R. &lt;a href=&#34;http://www.stata-journal.com/sjpdf.html?articlenum=st0007&#34;&gt;Parameters
behind &amp;ldquo;nonparametric&amp;rdquo; statistics: Kendall&amp;rsquo;s tau,Somers&amp;rsquo; D and median
differences&lt;/a&gt;.
Stata Journal 2002; 2(1):45-64.&lt;/p&gt;

&lt;p&gt;虽然作者强调非参统计，但是如果数据分布满足参数统计的assumption的话，还是用参数统计好，更加powerful。这个可能需要我们在做统计之前对数据分布做一下检验。不过正态检验其实用处也不大，小样本的话，不够powerful，大样本的话，即使不是正态分布，t-test和ANOVA也是很robust的。&lt;/p&gt;

&lt;p&gt;如果不满足参数统计检验的话，也不一定就得用非参统计，不负责任地说，可能用&lt;a href=&#34;http://guangchuangyu.github.io/2009/07/bootstrap-method/&#34;&gt;bootstrap&lt;/a&gt;效果还更好。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2. R (or I guess S). R is a cranky, odd statistical language/system with
a great scientific plotting package. Its a package written mainly by
statisticians for statisticians, and is rather unforgiving the first
time you use it. It is defnitely worth persevering. It&amp;rsquo;s basically a
combination of excel spreadsheets on steriods (with no data entry. an
Rdata frame is really the same logical set as a excel workbook - able to
handle millions of points, not 1,000s), a statistical methods compendium
(it&amp;rsquo;s usually the case that statistical methods are written first in R,
and you can almost guarantee that there are no bugs in the major
functions - unlike many other scenarios) and a graphical data
exploration tool (in particular lattice and ggplot packages). The syntax
is inconsistent, the documentation sometimes wonderful, often awful and
the learning curve is like the face of the Eiger. But once you&amp;rsquo;ve met
p.adjust(), xyplot() and apply(), you can never turn back.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://www.r-project.org&#34;&gt;R&lt;/a&gt;实在是太好用了，习惯用矢量运算之后，我就很少用perl了。不过学生物的，我所见过的人，能用好excel的人不多（我也不会用-,-），会用SPSS的人非常少，SAS从没见过有人用。每次我告诉身边的人，我用的是R，几乎都没人听说过的。在国内，目前主要也就高校里有人用。但至少做生信的，是需要学R的，&lt;a href=&#34;http://www.bioconductor.org/&#34;&gt;Bioconductor&lt;/a&gt;上面那一大堆的软件包，已然是无法回避。&lt;/p&gt;

&lt;p&gt;学生物的人都喜欢有图形界面的软件，像spss这种，点菜单无非是为了选参数，而R这种，变成敲键盘而已，一样的。用编程语言比用分析软件要好，可自动化，而且有利于交流（看一下代码，就知道都干了些什么），像SPSS这种把很多分析模块化，点点鼠标就能把回归模型算出来，固然是好，但是现代的数据分析，已经很少有问题是点个鼠标就能解决的了。&lt;/p&gt;

&lt;p&gt;至于画图，文中提到lattice和ggplot，lattice应该是目前R上面最复杂的图形包，功能比ggplot要强得多，画图速度也比ggplot要快，不过我没用过。只学了ggplot，因为ggplot的语法更加human
friendly，我觉得，学了ggplot后，都会爱上画图的 =,=&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;3. The problem of multiple testing, and how to handle it, either with
the Expected value, or FDR, and the backstop of many of piece of
bioinformatics - large scale permutation. Large scale permutation is
sometimes frowned upon by more maths/distribution purists but often is
the only way to get a sensible sense of whether something is likely &amp;ldquo;by
chance&amp;rdquo; (whatever the latter phrase means - it&amp;rsquo;s a very open question)
given the complex, hetreogenous data we have. 10 years ago perhaps the
lack of large scale compute resources meant this option was less open to
people, but these days basically everyone should be working out how to
appropriate permute the data to allow a good estimate of
&amp;ldquo;surprisingness&amp;rdquo; of an observation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;高通量的组学数据，变得越来越常见，pvalue算的是犯一类错误的概率，组学数据观测点多，而重复少，noise很多，如果单纯卡个pvalue，越高通量的数据，犯二类错误的概率会更大，假阳性没有得到控制。这个越来越重要，这周去给学生上课，我还专门讲了Bonferroni
Method、Benjamini-Hochberg
Method还有q-value，不过好像我讲的时候，学生都没啥兴趣，或许有一天，他们写文章，reviewer要求给出FDR的时候，希望还能记起。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;4. The relationship between Pvalue, Effect size, and Sample size This
needs to be drilled into everyone - we&amp;rsquo;re far too trigger happy quoting
Pvalues, when we should often be quoting Pvalues and Effect size. Once a
Pvalue is significant, it&amp;rsquo;s higher significance is sort of meaningless
(or rather it compounds Effect size things with Sample size things, the
latter often being about relative frequency). So - if something is
significantly correlated/different, then you want to know about how much
of an effect this observation has. This is not just about GWAS like
statistics - in genomic biology we&amp;rsquo;re all too happy about quoting some
small Pvalue not realising that with a million or so points often, even
very small deviations will be significant. Quote your r2, Rhos or
proportion of variance explained&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;从没接触过GWAS，不知道是怎么算的，从文中的描述看，这里讲的是power
analysis，这个对实验设计有用，可以估计sample size。当然如果sample
size已确定，那么设定pvalue和power，可以计算effect
size，就是说，实验可以detect出多大的effect。或者知道sample size,effect
size,
pvalue，可以计算power，就是说effect存在的话，有多大的概率可以detect出来。这和pvalue不一样，pvalue算的是没有effect（$H_0$）的概率。&lt;/p&gt;

&lt;p&gt;power analysis就是四个变量，颠来倒去，知道三个，算第四个。&lt;/p&gt;

&lt;p&gt;差异越大，越容易检测出来，样本间的variance越大，就需要更大的样本量，来排除样本间差异所带来的干扰。差不多就是这样一些东西。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;5. Linear models and PCA. There is a tendency often to jump to quite
complex models - networks, or biologically inspired combinations, when
our first instinct should be to crack out the well established lm()
(linear model) for prediction and princomp() (PCA) for dimensionality
reduction. These are old school techniques - and often if you want to
talk about statistical fits one needs to make gaussian assumptions about
distributions - but most of the things we do could be either done well
in a linear model, and most of the correlation we look at could have
been found with a PCA biplot. The fact that these are 1970s bits of
statistics doesn&amp;rsquo;t mean they don&amp;rsquo;t work well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;PCA就是把高维空间映射到低维空间，在保留尽可能多信息的情况下进行降维处理，
下面这段解释了linear model和PCA之间的不同之处：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One may also see PCA as an analogue of the least squares method to
find a line that goes as “near” the points as possible – to simplify,
let us assume there are just two dimensions. But while the least
squares method is asymetric (the two variables play different roles:
they are not interchangeable, we try to predict one from the others,
we measure the distance parallel to one coordinate axis), the PCA is
symetric (the distance is measured orthogonally to the line we are
looking for).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;John Mark在评论里写道，进阶还需要学什么，一并记录下来。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The next level - number 6 - would be to get beyond P values, and
instead compute probability distributions of the quantities of
interest. This leads naturally to number 7, which is to delve into the
generative models that are currently solved by MCMC methods. This is
basically the Bayesian approach. Just as an aside &amp;ldquo;non parametrics&amp;rdquo; in
some new work is also used to mean models where the number of
parameters varies, as a consequence of the method.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Xming-windows下远程linux桌面</title>
      <link>http://guangchuangyu.github.io/cn/2010/07/xming-windows%E4%B8%8B%E8%BF%9C%E7%A8%8Blinux%E6%A1%8C%E9%9D%A2/</link>
      <pubDate>Mon, 05 Jul 2010 07:37:09 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2010/07/xming-windows%E4%B8%8B%E8%BF%9C%E7%A8%8Blinux%E6%A1%8C%E9%9D%A2/</guid>
      <description>&lt;p&gt;机房放着台机架机，闲着也是耗电，平时偶尔用putty登上去，没有图形界面还是有些不方便。&lt;/p&gt;

&lt;p&gt;搜了一下，发现好几个软件可做这样的事，Xming是开源的，所以选择使用Xming+putty来远程连linux的桌面。&lt;/p&gt;

&lt;p&gt;试用了一下，果然不错。&lt;/p&gt;

&lt;p&gt;需要修改/etc/ssh/sshd_config，添加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;X11Forwrding yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要配置一下PuTTY，&lt;code&gt;Connection-SSh-X11&lt;/code&gt;中选中&lt;code&gt;Enable X11forwarding&lt;/code&gt;
其中&lt;code&gt;X display location&lt;/code&gt;里填入&lt;code&gt;localhost:0&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;运行Xming，再用putty连到服务器上，运行程序，就OK了。就好像windows下的本地程序一般。整合性很好。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2010/07/putty.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;以后就可以不用重启了。直接在win7里远程用机房的linux。
那台机子，网络中心的人给装的CentOS，我已经很多年没用redhat系列的系统了，CentOS是redhat企业版的社区版本。&lt;/p&gt;

&lt;p&gt;redhat系列用yum去安装软件，有些像debian的apt，我总觉得yum这名字好奇怪，查了一下，是&lt;code&gt;yellow dog updater,modified&lt;/code&gt;的缩写，这样看来，这工具首先是出于黄狗系统中，黄狗系统是power构架上的Linux，也是redhat系列的，本科的时候，本来想在G3的机子上装这个，后来玩gentoo去了。&lt;/p&gt;

&lt;p&gt;可能是因为CentOS是企业版的缘故，很多软件都没有源，这也是apt的共同缺点，遇到官方源里没有的软件，就得自己手工添加源，所以还是gentoo和BSD系列好，完全不需要知道软件在那里，通常都懒得弄，直接下源码编译，比如要装R的时候，发现一堆包没装，装完了gcc/g77/g++等编译器之后，再编辑还是出错，一堆libs没装，还好这些都能通过yum去装，如果依赖的包没有yum的源中，自己手工解决依赖关系，虽然也简单，但挺烦人的。这也是gentoo和BSD系列的好处之一，基于源码编译，装完系统之后，手工去编译一个软件，很少有依赖包需要安装，该有的开发库基本上系统都装好了。&lt;/p&gt;

&lt;p&gt;CentOS源里的软件也比较老，装emacs，发现是老版本，还是gtk界面的，自己下cvs版本，编译。
&lt;code&gt;.emacs&lt;/code&gt;里设置一下，也OK。 &lt;code&gt;(set-default-font &amp;quot;Monospace-14&amp;quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;以前曾在redhat上装过apt，显然现在有yum就不需要了，用了BSD和gentoo之后，感觉还是不爽，没玩过把gentoo的portage移植过来，倒是玩过netbsd的pkgsrc装到redhat上，&lt;a href=&#34;http://www.netbsd.org/docs/software/packages.html&#34;&gt;pkgsrc&lt;/a&gt;本身就支持其它的Unix和Linux系统，源生态，安装方便，相当推荐。&lt;/p&gt;

&lt;p&gt;曾经还制作过&lt;a href=&#34;http://guangchuangyu.github.io/2007/05/%E6%88%91%E5%88%B6%E4%BD%9C%E7%9A%84pkgsrc/&#34;&gt;eva和xlyrics的pkgsrc&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bootstrap Method</title>
      <link>http://guangchuangyu.github.io/cn/2009/07/bootstrap-method/</link>
      <pubDate>Fri, 31 Jul 2009 09:14:42 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/cn/2009/07/bootstrap-method/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Bootstrapping_(statistics)&#34;&gt;bootstrap&lt;/a&gt;是对观测数据集进行有放回（replacement）的随机抽样，以评估总体的各项统计指标。可以用于假设检验、参数估计。好处是并不要求大样本，也不要求正态数据，并且对于不同的统计指标使用的是同样的计算方法。结果也更为可靠，坏处是计算量大。&lt;/p&gt;

&lt;p&gt;统计推断(statistical
inference)是基于样本统计值的抽样分布来计算的，抽样分布需要从总体中许多的样本来计算，在只有一个样本的情况下，bootstrap对这一随机样本进行有放回的重复抽样，每一个重抽样本与原始随机样本一样大，每次计算相应的抽样的统计值，重复了N次之后，就可以计算统计值的bootstrap分布。&lt;/p&gt;

&lt;p&gt;下面做一个小小的试验：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a &amp;lt;- c(seq(1:10), rnorm(50))  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;#创建一个样本，60个数据，非正态分布的，如下图&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2009/07/sample_a.png&#34; alt=&#34;&#34; title=&#34;sample_a&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;b &amp;lt;- rep(0, 1000)
for (i in 1:1000) {
    b[i] &amp;lt;- mean(sample(a, replace=TRUE))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对它进行1000次有放回重复抽样，计算均值，均值分布的柱状图和qq图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2009/07/hist_qq.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;分布是正态的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; mean(a)    #样本均值
[1] 0.947186
&amp;gt; mean(b)   #重抽样1000个样本均值的均值
[1] 0.9358049
&amp;gt; sd(b)
[1] 0.3245479
&amp;gt; sd(a)/sqrt(60)
[1] 0.3318863
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由bootstrap方法得到的标准误是0.325，而由原先随机样本所估算的是0.332，两者是相当接近的。由此可见呢，bootstrap方法与理论上的从总体中抽样所得到的样本分布是一致的，这样子就可以基于一个样本来计算样本的分布，而不是要从总体中抽N个样本。&lt;/p&gt;

&lt;p&gt;还用上面的例子，使用样本均值$ \bar{x}$去估算总体的均值$
\mu$，虽然我们的样本不是正态的，但如果bootstrap
distribution是正态的话，就可以使用类似于单样本t置信区间（要求样本是正态的）的公式:$
\bar{x} \pm t \cdot SE = \bar{x} \pm t \cdot
\frac{s}{\sqrt{n}}$ 相应的bootstrap t置信区间是：$ statistic
\pm t \cdot SE_{boot}$ 上面例子，总体均值$ \mu$
95%的置信度，就会落在：$ mean(a) \pm 2.009 \cdot sd(b)$
可以使用它，计算所有统计指标的置信区间。&lt;/p&gt;

&lt;p&gt;用于层次聚类分析的一个例子，使用Pvclust这个包，用于层次聚类，并通过multiscale
bootstrap
resampling给出相应的&lt;em&gt;p&lt;/em&gt;-value用于评估聚类结果的不确定性。提供了两种&lt;em&gt;p&lt;/em&gt;-values，AU（approximately
unbiased p-value, 通过multiscale bootstrap
resampling计算）和BP（bootstrap probability, 通过normal bootstrap
resampling计算），AU比BP较为unbiased。
Pvclust使用*hclust*（来自于stats包）进行层次聚类，并自动计算所有的子类的&lt;em&gt;p&lt;/em&gt;-value。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(pvclust)  # loads package
a &amp;lt;- matrix(rnorm(1000), 100, 10, dimnames=list(paste(&amp;quot;g&amp;quot;, 1:100, sep=&amp;quot;&amp;quot;), paste(&amp;quot;t&amp;quot;,1:10, sep=&amp;quot;&amp;quot;)))  # creats sample data
at &amp;lt;- t(a)  # transposes of a
cl &amp;lt;- pvclust(at, nboot=1000)  #performs hierarchical cluster analysis with multiscale bootstrap with 1000 repetitions.
pvrect(cl, alpha=0.95)  #highlights with red rectangles all clusters in the dendrogram which have an AU value above 95%, AU p-value &amp;gt; 0.95, the hypothesis that &amp;quot;the cluster does not exist&amp;quot; is rejected with significance level 0.05;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2009/07/pvclust_test.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#pick significant clusters.
clsig &amp;lt;- pvpick(cl, alpha=0.95, pv=&amp;quot;au&amp;quot;, type=&amp;quot;geq&amp;quot;, max.only=TRUE)  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;reference:5129f3fc49180ee68d0efdb6ded483c8&#34;&gt;Reference&lt;/h3&gt;

&lt;p&gt;1.  Moore, D.S., McCabe, G.P. &amp;amp; Craig, B. Introduction to the Practice
of Statistics w/CD-ROM.  (W. H. Freeman: 2007).&lt;/p&gt;

&lt;p&gt;2.  Suzuki, R. (2006). Pvclust: an R package for assessing the uncertainty in hierarchical clustering, Bioinformatics, 22(12), 1540-1542
DOI:
&lt;a href=&#34;http://dx.doi.org/10.1093/bioinformatics/btl117&#34;&gt;10.1093/bioinformatics/btl117&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>