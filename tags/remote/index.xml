<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Remote on Guangchuang Yu</title>
    <link>https://guangchuangyu.github.io/cn/tags/remote/</link>
    <description>Recent content in Remote on Guangchuang Yu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Jul 2010 07:37:09 +0800</lastBuildDate>
    <atom:link href="https://guangchuangyu.github.io/cn/tags/remote/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Xming-windows下远程linux桌面</title>
      <link>https://guangchuangyu.github.io/cn/2010/07/xming-windows%E4%B8%8B%E8%BF%9C%E7%A8%8Blinux%E6%A1%8C%E9%9D%A2/</link>
      <pubDate>Mon, 05 Jul 2010 07:37:09 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/cn/2010/07/xming-windows%E4%B8%8B%E8%BF%9C%E7%A8%8Blinux%E6%A1%8C%E9%9D%A2/</guid>
      <description>&lt;p&gt;机房放着台机架机，闲着也是耗电，平时偶尔用putty登上去，没有图形界面还是有些不方便。&lt;/p&gt;

&lt;p&gt;搜了一下，发现好几个软件可做这样的事，Xming是开源的，所以选择使用Xming+putty来远程连linux的桌面。&lt;/p&gt;

&lt;p&gt;试用了一下，果然不错。&lt;/p&gt;

&lt;p&gt;需要修改/etc/ssh/sshd_config，添加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;X11Forwrding yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要配置一下PuTTY，&lt;code&gt;Connection-SSh-X11&lt;/code&gt;中选中&lt;code&gt;Enable X11forwarding&lt;/code&gt;
其中&lt;code&gt;X display location&lt;/code&gt;里填入&lt;code&gt;localhost:0&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;运行Xming，再用putty连到服务器上，运行程序，就OK了。就好像windows下的本地程序一般。整合性很好。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2010/07/putty.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;以后就可以不用重启了。直接在win7里远程用机房的linux。
那台机子，网络中心的人给装的CentOS，我已经很多年没用redhat系列的系统了，CentOS是redhat企业版的社区版本。&lt;/p&gt;

&lt;p&gt;redhat系列用yum去安装软件，有些像debian的apt，我总觉得yum这名字好奇怪，查了一下，是&lt;code&gt;yellow dog updater,modified&lt;/code&gt;的缩写，这样看来，这工具首先是出于黄狗系统中，黄狗系统是power构架上的Linux，也是redhat系列的，本科的时候，本来想在G3的机子上装这个，后来玩gentoo去了。&lt;/p&gt;

&lt;p&gt;可能是因为CentOS是企业版的缘故，很多软件都没有源，这也是apt的共同缺点，遇到官方源里没有的软件，就得自己手工添加源，所以还是gentoo和BSD系列好，完全不需要知道软件在那里，通常都懒得弄，直接下源码编译，比如要装R的时候，发现一堆包没装，装完了gcc/g77/g++等编译器之后，再编辑还是出错，一堆libs没装，还好这些都能通过yum去装，如果依赖的包没有yum的源中，自己手工解决依赖关系，虽然也简单，但挺烦人的。这也是gentoo和BSD系列的好处之一，基于源码编译，装完系统之后，手工去编译一个软件，很少有依赖包需要安装，该有的开发库基本上系统都装好了。&lt;/p&gt;

&lt;p&gt;CentOS源里的软件也比较老，装emacs，发现是老版本，还是gtk界面的，自己下cvs版本，编译。
&lt;code&gt;.emacs&lt;/code&gt;里设置一下，也OK。 &lt;code&gt;(set-default-font &amp;quot;Monospace-14&amp;quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;以前曾在redhat上装过apt，显然现在有yum就不需要了，用了BSD和gentoo之后，感觉还是不爽，没玩过把gentoo的portage移植过来，倒是玩过netbsd的pkgsrc装到redhat上，&lt;a href=&#34;http://www.netbsd.org/docs/software/packages.html&#34;&gt;pkgsrc&lt;/a&gt;本身就支持其它的Unix和Linux系统，源生态，安装方便，相当推荐。&lt;/p&gt;

&lt;p&gt;曾经还制作过&lt;a href=&#34;http://guangchuangyu.github.io/2007/05/%E6%88%91%E5%88%B6%E4%BD%9C%E7%9A%84pkgsrc/&#34;&gt;eva和xlyrics的pkgsrc&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>通过局域网在linux下使用windows的程序</title>
      <link>https://guangchuangyu.github.io/cn/2008/09/%E9%80%9A%E8%BF%87%E5%B1%80%E5%9F%9F%E7%BD%91%E5%9C%A8linux%E4%B8%8B%E4%BD%BF%E7%94%A8windows%E7%9A%84%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Mon, 22 Sep 2008 01:26:00 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/cn/2008/09/%E9%80%9A%E8%BF%87%E5%B1%80%E5%9F%9F%E7%BD%91%E5%9C%A8linux%E4%B8%8B%E4%BD%BF%E7%94%A8windows%E7%9A%84%E7%A8%8B%E5%BA%8F/</guid>
      <description>&lt;p&gt;用了好多年linux，现在用windows越来越少了，但是还是得用。没办法，上taobao买个东西，上网银都得用ie，有时候还得用office等其它一些软件。&lt;/p&gt;

&lt;p&gt;实验室里有台机子是做文件服务的，装的是windows 2003
server。之前使用rdesktop远程桌面，最近发现配合seamlessrdp可以让rdesktop实现更好的效果，运行windows程序，就像linux中原生程序一样。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; [下载
&amp;gt; seamlessrdp.zip](http://www.cendio.se/files/thinlinc/seamlessrdp/seamlessrdp.zip)
&amp;gt; 解压丢在C盘。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在linux下运行这样的指令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; rdesktop -A -s &amp;quot;c:\\seamlessrdp/seamlessrdpshell.exe C:\\Program
&amp;gt; Files\\Internet Explorer\\iexplore.exe&amp;quot; ip:3389 -u administrator -p
&amp;gt; password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就可以在linux下运行服务器端的ie了。windows下所有程序都没问题。&lt;/p&gt;

&lt;p&gt;这个指令有点长，最好是写个shell脚本，每次运行实际上是进行一次远程连接，windows2003默认只能支持两个远程的连接，所以只能运行两个。正确的做法是运行explorer，然后在里面双击程序，这样可以运行N个程序。运行的程序跟linux下native的程序是一样的。但是读写都在远程机子上，最好架个samba，这样两个机器就可以互相读写文件。&lt;/p&gt;

&lt;p&gt;ps: tsclient做为远程桌面客户端更强大点，不单支持RDP，还支持VNC,XDMCP。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Screen使得远程终端更加有效率</title>
      <link>https://guangchuangyu.github.io/cn/2008/08/screen%E4%BD%BF%E5%BE%97%E8%BF%9C%E7%A8%8B%E7%BB%88%E7%AB%AF%E6%9B%B4%E5%8A%A0%E6%9C%89%E6%95%88%E7%8E%87/</link>
      <pubDate>Fri, 08 Aug 2008 12:40:22 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/cn/2008/08/screen%E4%BD%BF%E5%BE%97%E8%BF%9C%E7%A8%8B%E7%BB%88%E7%AB%AF%E6%9B%B4%E5%8A%A0%E6%9C%89%E6%95%88%E7%8E%87/</guid>
      <description>&lt;p&gt;根据主页&lt;a href=&#34;http://www.gnu.org/software/screen/&#34;&gt;Screen&lt;/a&gt;的描述&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: tahoma;&#34;&gt;“Screen is a full-screen window
manager that multiplexes a physical terminal between several
processes, typically interactive shells. Each virtual terminal
provides the functions of the DEC VT100 terminal and, in addition,
several control functions from the ANSI X3.64 (ISO 6429) and ISO 2022
standards (e.g., insert/delete line and support for multiple character
sets). There is a scrollback history buffer for each virtual terminal
and a copy-and-paste mechanism that allows the user to move text
regions between windows. When screen is called, it creates a single
window with a shell in it (or the specified command) and then gets out
of your way so that you can use the program as you normally would.
Then, at any time, you can create new (full-screen) windows with other
programs in them (including more shells), kill the current window,
view a list of the active windows, turn output logging on and off,
copy text between windows, view the scrollback history, switch between
windows, etc. All windows run their programs completely independent of
each other. Programs continue to run when their window is currently
not visible and even when the whole screen session is detached from
the users terminal.” &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;开个终端远程连接服务器提交计算任务时，只能挂着机子，终端无法关闭，一关计算任务也就断了。使用screen就可以了。在终端里敲screen就进入screen了，跟原来的终端是没两样的。但是神奇的是，当你敲Control-ad的时候，这个session就detach了，关机重启都没问题，再到终端上键入screen
-r就可以重新attach原先那个session，原先提交的任务没有断开，程序依然在跑。这样就不用整天挂着机子等服务器端的计算了。&lt;/p&gt;

&lt;p&gt;更为方便的是，比如在实验室里挂着机子使用screen连到服务器上，没有detach，然后到了宿舍，想看程序跑得怎么样。可以远程登录上去，使用screen -dr把原先的session detach，然后再重新attach，这样到那都可以进行控制。不会受到限制。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>